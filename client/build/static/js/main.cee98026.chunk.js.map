{"version":3,"sources":["features/movies/slices/watchlistSlice.js","common/AppNavBar.js","styles/styled-components.js","features/movies/slices/ReducerLogic.js","features/movies/slices/nowPlayingMoviesSlice.js","features/movies/slices/topRatedMoviesSlice.js","features/movies/slices/upcomingMoviesSlice.js","features/movies/slices/popularMoviesSlice.js","common/Pagination.js","common/SimilarMovie.js","common/SimilarMoviesSection.js","common/MovieCard.js","common/Alert.js","common/MovieGrid.js","features/movies/slices/GetReducers.js","hooks/useWindowSize.js","common/GridWithPagination.js","common/GridSection.js","common/MovieSection.js","common/HeroSection.js","common/Home.js","common/WatchlistGrid.js","common/Watchlist.js","App.js","app/store.js","index.js","images/poster_unavailable.png","images/iron_man_md.jpg","images/iron_man_lg.jpg"],"names":["watchlistSlice","createSlice","name","initialState","watchlist","reducers","getLocalStorageSuccess","state","action","watchlistedMovies","payload","add","movieToAdd","find","movie","id","push","remove","selectedMovie","index","findIndex","splice","actions","fetchLocalStorage","dispatch","getState","a","storedMovies","JSON","parse","localStorage","getItem","error","console","log","addToLocalStorage","setItem","stringify","removeFromLocalStorage","toggleWatchlist","found","watchlistState","Nav","styled","nav","props","theme","gray","light","NavInnerContainer","div","LogoContainer","dark","gold","NavList","ul","NavItem","li","CustomBadge","Badge","GithubIcon","FaGithub","AppNavbar","useState","useSelector","to","pill","length","href","target","rel","FullWidthContainer","section","bg","MovieSectionContainer","Heading","h2","PaginationContainer","PreviousPagination","p","NextPagination","PaginationButton","span","grayLight","Grid","Movie","article","borderRadius","background_img","CustomModal","Modal","CustomModalBody","ModalBody","MainDiv","ImageContainer","MovieImage","img","MovieHeader","DetailsContainer","Details","hidden","Description","SimilarMoviesContainer","SimilarMoviesGrid","MovieThumbnail","SimilarMoviesHeading","IconContainer","HeartIcon","FaHeart","watchlisted","red","CloseButton","MdClose","setLoading","status","setFailure","requestSuccess","results","total_pages","withDuplicates","movies","concat","Array","from","Set","map","pages","handleToggle","movieToToggle","nowPlayingMoviesSlice","toggle","startFetching","fetchingFailed","fetchingSuccess","fetchNowPlayingMovies","page","axios","get","response","data","message","toggleWatchlistNowPlaying","nowPlayingState","nowPlayingMovies","topRatedMoviesSlice","fetchTopRatedMovies","toggleWatchlistTopRated","topRatedMoviesState","topRatedMovies","upcomingMoviesSlice","fetchUpcomingMovies","toggleWatchlistUpcoming","upcomingMoviesState","upcomingMovies","popularMoviesSlice","fetchPopularMovies","toggleWatchlistPopular","popularMoviesState","popularMovies","Pagination","firstMovieVisible","showNextMovies","lastMovieVisible","showPreviousMovies","onClick","SimilarMovie","posterPath","change","SimilarMoviesSection","similarMovies","gridItems","slice","key","poster_path","MovieCard","useDispatch","movieDetails","setMovieDetails","setSimilarMovies","similarMovieDetails","setSimilarMovieDetails","isMovieModalWatchlisted","setIsMovieModalWatchlisted","title","tagline","genres","runtime","overview","release_date","original_language","budget","revenue","vote_average","homepage","modal","setModal","fetchSimilarMovies","IMG_MOVIE_CARD","PosterUnavailable","IMG_THUMBNAIL_URL","fetchMovieDetails","movieId","details","fetchSimilarMovieDetails","movieWatchlisted","changeToSimilarMovie","formatMoney","num","toString","replace","handleWatchlist","e","stopPropagation","useEffect","fetchAsync","movieToCheck","checkIfMovieModalWatchlisted","checkIfMovieCardWatchlisted","isOpen","src","genre","window","innerWidth","Date","getFullYear","toUpperCase","AlertContainer","Alert","children","MovieGrid","maxPages","currentPage","fetchNextPage","setFirstMovieVisible","setLastMovieVisible","prevState","moviesShowing","Math","abs","moviesToFill","style","textAlign","marginTop","determineFetch","type","useWindowSize","size","setSize","useLayoutEffect","updateSize","addEventListener","removeEventListener","GridWithPagination","width","setGridItems","nowPlayingCurrentPage","setNowPlayingCurrentPage","upcomingCurrentPage","setUpcomingCurrentPage","topRatedCurrentPage","setTopRatedCurrentPage","popularCurrentPage","setPopularCurrentPage","nowPlayingMoviesPages","nowPlayingMoviesStatus","upcomingMoviesPages","upcomingMoviesStatus","topRatedMoviesPages","topRatedMoviesStatus","popularMoviesPages","popularMoviesStatus","fetch","createGridComponent","GridSection","heading","MovieSection","FullWidthBackground","IronManImageMedium","IronManImageLarge","Container","MainHeading","h1","SubHeading","FlexContainer","Heart","InnerIconContainer","Paragraph","HeroSection","background","Home","WatchlistHeading","WatchlistGrid","recommendedMovies","setRecommendedMovies","fetchRecommendations","newRecommendations","newMovies","uniqueMovies","removeDuplicates","newMoviesRecommended","filterOutWatchlist","recommendations","filter","some","m","firstArray","secondArray","self","marginBottom","FullWidthWatchlistContainer","App","path","exact","component","Watchlist","render","configureStore","reducer","watchlistReducer","nowPlayingMoviesReducer","topRatedMoviesReducer","popularMoviesReducer","upcomingMoviesReducer","ReactDOM","store","document","getElementById","module","exports"],"mappings":"qPAEaA,EAAiBC,YAAY,CACxCC,KAAM,YACNC,aAAc,CACZC,UAAW,IAEbC,SAAU,CACRC,uBAAwB,SAACC,EAAOC,GAC9B,IAAMC,EAAoBD,EAAOE,QACjCH,EAAMH,UAAYK,GAEpBE,IAAK,SAACJ,EAAOC,GACX,IAAMI,EAAaJ,EAAOE,QACZH,EAAMH,UAAUS,MAAK,SAAAC,GAAK,OAAIA,EAAMC,KAAOH,EAAWG,OAElER,EAAMH,UAAUY,KAAKJ,IAGzBK,OAAQ,SAACV,EAAOC,GACd,IAAMU,EAAgBV,EAAOE,QACvBS,EAAQZ,EAAMH,UAAUgB,WAC5B,SAAAN,GAAK,OAAIA,EAAMC,KAAOG,EAAcH,OAEvB,IAAXI,GACFZ,EAAMH,UAAUiB,OAAOF,EAAO,O,EAMiBnB,EAAesB,QAAvDhB,E,EAAAA,uBAAwBK,E,EAAAA,IAAKM,E,EAAAA,OAI/BM,EAAoB,yDAAM,WAAOC,EAAUC,GAAjB,eAAAC,EAAA,sDACrC,IACQC,EAAeC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,MAClEP,EAASlB,EAAuBqB,IAChC,MAAOK,GACPC,QAAQC,IAAIF,GALuB,2CAAN,yDASpBG,EAAoB,SAAAjB,GAAa,8CAAI,WAAMM,GAAN,eAAAE,EAAA,sDAC1CC,EAAeC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,MAEpDJ,EAAad,MAAK,SAAAC,GAAK,OAAIA,EAAMC,KAAOG,EAAcH,QAElEY,EAAaX,KAAKE,GAClBM,EAASb,EAAIO,KAEfY,aAAaM,QAAQ,SAAUR,KAAKS,UAAUV,IARE,2CAAJ,uDAWjCW,EAAyB,SAAApB,GAAa,8CAAI,WAAMM,GAAN,iBAAAE,EAAA,sDAC/CC,EAAeC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,OAGnD,KADTZ,EAAQQ,EAAaP,WAAU,SAAAN,GAAK,OAAIA,EAAMC,KAAOG,EAAcH,SAEvEY,EAAaN,OAAOF,EAAO,GAC3BK,EAASP,EAAOC,KAElBY,aAAaM,QAAQ,SAAUR,KAAKS,UAAUV,IARO,2CAAJ,uDAWtCY,EAAkB,SAAArB,GAAa,8CAAI,WAAOM,EAAUC,GAAjB,iBAAAC,EAAA,sDACxCtB,EAAYqB,IAAWrB,UAAUA,UACjCoC,EAAQpC,EAAUS,MAAK,SAAAC,GAAK,OAAIA,EAAMC,KAAOG,EAAcH,MAG/DS,EADEgB,EACOF,EAAuBpB,GAEvBiB,EAAkBjB,IAPiB,2CAAJ,yDAW/BuB,EAAiB,SAAAlC,GAAK,MAAK,CACtCH,UAAWG,EAAMH,UAAUA,YAGdJ,IAAf,Q,8lDCxEA,IAAM0C,EAAMC,IAAOC,IAAV,KACO,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,QAC1B,SAAAF,GAAK,OAAIA,EAAMC,MAAME,SAO1BC,EAAoBN,IAAOO,IAAV,KAUjBC,EAAgBR,IAAOO,IAAV,KAQH,SAAAL,GAAK,OAAIA,EAAMC,MAAMM,QAC1B,SAAAP,GAAK,OAAIA,EAAMC,MAAMO,QAG1BC,EAAUX,IAAOY,GAAV,KAQgB,SAAAV,GAAK,OAAIA,EAAMC,MAAMO,QAI5CG,EAAUb,IAAOc,GAAV,KAEF,SAAAZ,GAAK,OAAIA,EAAMC,MAAME,SAM1BU,EAAcf,YAAOgB,IAAPhB,CAAH,KACN,SAAAE,GAAK,OAAIA,EAAMC,MAAME,SAiB1BY,EAAajB,YAAOkB,IAAPlB,CAAH,KACL,SAAAE,GAAK,OAAIA,EAAMC,MAAME,SA6CjBc,EAxCG,SAAAjB,GAAU,IAAD,EACGkB,oBAAS,GADZ,mBAEjB3D,GAFiB,UAEH4D,YAAYvB,GAA1BrC,WAER,OACE,kBAACsC,EAAD,KACE,kBAACO,EAAD,KACE,kBAAC,IAAD,CAAMgB,GAAG,KACP,kBAACd,EAAD,KACE,kBAAC,IAAD,QAIJ,kBAACG,EAAD,KACE,kBAAC,IAAD,CAAMW,GAAG,KACP,kBAACT,EAAD,cAEF,kBAAC,IAAD,CAAMS,GAAG,cACP,kBAACT,EAAD,iBAEE,kBAACE,EAAD,CAAaQ,MAAI,GACf,8BAAO9D,EAAU+D,WAIvB,kBAACX,EAAD,KACE,uBACEY,KAAK,+CACLC,OAAO,SACPC,IAAI,uBAEJ,kBAACV,EAAD,Y,q3OC7GP,IAAMW,GAAqB5B,IAAO6B,QAAV,MAET,SAAA3B,GAAK,OAAKA,EAAM4B,GAAK5B,EAAM4B,GAAK5B,EAAMC,MAAMM,QAYrDsB,GAAwB/B,IAAOO,IAAV,MAKrByB,GAAUhC,IAAOiC,GAAV,MAKW,SAAA/B,GAAK,OAAIA,EAAMC,MAAMO,QACzC,SAAAR,GAAK,OAAIA,EAAMC,MAAME,SAYnB6B,GAAsBlC,IAAOO,IAAV,MAInB4B,GAAqBnC,IAAOoC,EAAV,MAMlBC,GAAiBrC,IAAOoC,EAAV,MAMdE,GAAmBtC,IAAOuC,KAAV,MAOlB,SAAArC,GAAK,OAAIA,EAAMC,MAAMqC,aAKnBC,GAAOzC,IAAOO,IAAV,MAuBJmC,GAAQ1C,IAAO2C,QAAV,MAEC,SAAAzC,GAAK,OAAIA,EAAMC,MAAMyC,gBACxB,SAAA1C,GAAK,OACjBA,EAAM2C,eAAiB3C,EAAM2C,eAAiB3C,EAAMC,MAAMM,QAOnD,SAAAP,GAAK,OAAIA,EAAMC,MAAME,SAexB,SAAAH,GAAK,OAAIA,EAAM2C,kBA2BVC,GAAc9C,YAAO+C,IAAP/C,CAAH,MACR,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,QAClB,SAAAF,GAAK,OAAIA,EAAMC,MAAMyC,gBAe3BI,GAAkBhD,YAAOiD,IAAPjD,CAAH,MAEZ,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,QAMxB8C,GAAUlD,IAAOO,IAAV,MACT,SAAAL,GAAK,OAAIA,EAAMC,MAAME,SAMnB8C,GAAiBnD,IAAOO,IAAV,MAGd6C,GAAapD,IAAOqD,IAAV,MAEJ,SAAAnD,GAAK,OAAIA,EAAMC,MAAMyC,gBACxB,SAAA1C,GAAK,OAAIA,EAAM2C,kBAWlBS,GAActD,IAAOO,IAAV,MAcX,SAAAL,GAAK,OAAIA,EAAMC,MAAMO,QAMrB,SAAAR,GAAK,OAAIA,EAAMC,MAAME,SAQrBkD,GAAmBvD,IAAOO,IAAV,MAkBhBiD,GAAUxD,IAAOO,IAAV,MACJ,SAAAL,GAAK,OAAKA,EAAMuD,OAAS,SAAW,aAMvC,SAAAvD,GAAK,OAAIA,EAAMC,MAAMqC,aAcrBkB,GAAc1D,IAAOoC,EAAV,MAIb,SAAAlC,GAAK,OAAIA,EAAMC,MAAME,SAInBsD,GAAyB3D,IAAO6B,QAAV,MAGhB,SAAA3B,GAAK,OAAIA,EAAMC,MAAMyC,gBACxB,SAAA1C,GAAK,OAAIA,EAAMC,MAAMM,QAIxB,SAAAP,GAAK,OAAIA,EAAMC,MAAMqC,aAIrBoB,GAAoB5D,IAAOO,IAAV,MAsBjBsD,GAAiB7D,IAAOO,IAAV,KACR,SAAAL,GAAK,OAAIA,EAAMC,MAAMyC,gBACxB,SAAA1C,GAAK,OAAIA,EAAM2C,kBAQlBiB,GAAuB9D,IAAOiC,GAAV,KAEtB,SAAA/B,GAAK,OAAIA,EAAMC,MAAME,SAGnB0D,GAAgB/D,IAAOO,IAAV,KAwBbyD,GAAYhE,YAAOiE,IAAPjE,CAAH,KAEX,SAAAE,GAAK,OAAKA,EAAMgE,YAAchE,EAAMC,MAAMgE,IAAM,UAI9CC,GAAcpE,YAAOqE,IAAPrE,CAAH,KACb,SAAAE,GAAK,OAAIA,EAAMC,MAAMgE,OC9VnBG,GAAa,SAAA1G,GACxBA,EAAM2G,OAAS,WAIJC,GAAa,SAAC5G,EAAOC,GAChCyB,QAAQC,IAAI1B,EAAOE,SACnBH,EAAMyB,MAAQxB,EAAOE,QACrBH,EAAM2G,OAAS,WAIJE,GAAiB,SAAC7G,EAAOC,GAAY,IAAD,EACdA,EAAOE,QAAhC2G,EADuC,EACvCA,QAASC,EAD8B,EAC9BA,YACXC,EAAiBhH,EAAMiH,OAAOC,OAAOJ,GAE3C9G,EAAMiH,OAASE,MAAMC,KAAK,IAAIC,IAAIL,EAAeM,KAAI,SAAA/G,GAAK,OAAIA,EAAMC,QAAM8G,KACxE,SAAA9G,GACE,OAAOwG,EAAe1G,MAAK,SAAAC,GAAK,OAAIA,EAAMC,KAAOA,QAGrDR,EAAMuH,MAAQR,EACd/G,EAAM2G,OAAS,WAIJa,GAAe,SAACxH,EAAOC,GAAY,IACtCO,EAAOP,EAAOE,QAAdK,GACFiH,EAAgBzH,EAAMiH,OAAO3G,MAAK,SAAAC,GAAK,OAAIA,EAAMC,KAAOA,KAC1DiH,IACFA,EAAcnB,aAAemB,EAAcnB,c,oBCrBlCoB,GAAwBhI,YAAY,CAC/CC,KAAM,qBACNC,aAAc,CACZqH,OAAQ,GACRM,MAAO,KACPZ,OAAQ,OACRlF,MAAO,MAET3B,SAAU,CACR6H,OAAQH,GACRI,cAAelB,GACfmB,eAAgBjB,GAChBkB,gBAAiBjB,M,GASjBa,GAAsB3G,QAJxB4G,G,GAAAA,OACAC,G,GAAAA,cACAC,G,GAAAA,eACAC,G,GAAAA,gBAUWC,GAAwB,SAAAC,GAAI,8CAAI,WAAM/G,GAAN,eAAAE,EAAA,6DAC3CF,EAAS2G,MADkC,kBAGlBK,KAAMC,IAAN,6BAAgCF,IAHd,OAGnCG,EAHmC,OAIzClH,EAAS6G,GAAgBK,EAASC,OAJO,gDAMzC1G,QAAQC,IAAR,MACAV,EAAS4G,GAAe,KAAIQ,UAPa,yDAAJ,uDAY5BC,GAA4B,SAAA3H,GAAa,8CAAI,WAAMM,GAAN,SAAAE,EAAA,sDACxDF,EAAS0G,GAAOhH,IAGZA,EAAc2F,YAChBrF,EAASc,EAAuBpB,IAEhCM,EAASW,EAAkBjB,IAP2B,2CAAJ,uDAezC4H,GAAkB,SAAAvI,GAAK,MAAK,CACvCiH,OAAQjH,EAAMwI,iBAAiBvB,OAC/BM,MAAOvH,EAAMwI,iBAAiBjB,MAC9BZ,OAAQ3G,EAAMwI,iBAAiB7B,SAGlBe,MAAf,QC/Dae,GAAsB/I,YAAY,CAC7CC,KAAM,YACNC,aAAc,CACZqH,OAAQ,GACRM,MAAO,KACPZ,OAAQ,OACRlF,MAAO,MAET3B,SAAU,CACR6H,OAAQH,GACRI,cAAelB,GACfmB,eAAgBjB,GAChBkB,gBAAiBjB,M,GASjB4B,GAAoB1H,QAJtB4G,G,GAAAA,OACAC,G,GAAAA,cACAC,G,GAAAA,eACAC,G,GAAAA,gBAUWY,GAAsB,SAAAV,GAAI,8CAAI,WAAM/G,GAAN,eAAAE,EAAA,6DACzCF,EAAS2G,MADgC,kBAGhBK,KAAMC,IAAN,2BAA8BF,IAHd,OAGjCG,EAHiC,OAIvClH,EAAS6G,GAAgBK,EAASC,OAJK,gDAMvC1G,QAAQC,IAAR,MACAV,EAAS4G,GAAe,KAAIQ,UAPW,yDAAJ,uDAY1BM,GAA0B,SAAAhI,GAAa,8CAAI,WAAMM,GAAN,SAAAE,EAAA,sDACtDF,EAAS0G,GAAOhH,IAGZA,EAAc2F,YAChBrF,EAASc,EAAuBpB,IAEhCM,EAASW,EAAkBjB,IAPyB,2CAAJ,uDAevCiI,GAAsB,SAAA5I,GAAK,MAAK,CAC3CiH,OAAQjH,EAAM6I,eAAe5B,OAC7BM,MAAOvH,EAAM6I,eAAetB,MAC5BZ,OAAQ3G,EAAM6I,eAAelC,SAGhB8B,MAAf,QC/DaK,GAAsBpJ,YAAY,CAC7CC,KAAM,WACNC,aAAc,CACZqH,OAAQ,GACRM,MAAO,KACPZ,OAAQ,OACRlF,MAAO,MAET3B,SAAU,CACR6H,OAAQH,GACRI,cAAelB,GACfmB,eAAgBjB,GAChBkB,gBAAiBjB,M,GASjBiC,GAAoB/H,QAJtB4G,G,GAAAA,OACAC,G,GAAAA,cACAC,G,GAAAA,eACAC,G,GAAAA,gBAUWiB,GAAsB,SAAAf,GAAI,8CAAI,WAAM/G,GAAN,eAAAE,EAAA,6DACzCF,EAAS2G,MADgC,kBAGhBK,KAAMC,IAAN,2BAA8BF,IAHd,OAGjCG,EAHiC,OAIvClH,EAAS6G,GAAgBK,EAASC,OAJK,gDAMvC1G,QAAQC,IAAR,MACAV,EAAS4G,GAAe,KAAIQ,UAPW,yDAAJ,uDAY1BW,GAA0B,SAAArI,GAAa,8CAAI,WAAMM,GAAN,SAAAE,EAAA,sDACtDF,EAAS0G,GAAOhH,IAGZA,EAAc2F,YAChBrF,EAASc,EAAuBpB,IAEhCM,EAASW,EAAkBjB,IAPyB,2CAAJ,uDAevCsI,GAAsB,SAAAjJ,GAAK,MAAK,CAC3CiH,OAAQjH,EAAMkJ,eAAejC,OAC7BM,MAAOvH,EAAMkJ,eAAe3B,MAC5BZ,OAAQ3G,EAAMkJ,eAAevC,SAGhBmC,MAAf,QC/DaK,GAAqBzJ,YAAY,CAC5CC,KAAM,iBACNC,aAAc,CACZqH,OAAQ,GACRM,MAAO,KACPZ,OAAQ,OACRlF,MAAO,MAET3B,SAAU,CACR6H,OAAQH,GACRI,cAAelB,GACfmB,eAAgBjB,GAChBkB,gBAAiBjB,M,GASjBsC,GAAmBpI,QAJrB4G,G,GAAAA,OACAC,G,GAAAA,cACAC,G,GAAAA,eACAC,G,GAAAA,gBAUWsB,GAAqB,SAAApB,GAAI,8CAAI,WAAM/G,GAAN,eAAAE,EAAA,6DACxCF,EAAS2G,MAD+B,kBAGfK,KAAMC,IAAN,0BAA6BF,IAHd,OAGhCG,EAHgC,OAItClH,EAAS6G,GAAgBK,EAASC,OAJI,gDAMtC1G,QAAQC,IAAR,MACAV,EAAS4G,GAAe,KAAIQ,UAPU,yDAAJ,uDAYzBgB,GAAyB,SAAA1I,GAAa,8CAAI,WAAMM,GAAN,SAAAE,EAAA,sDACrDF,EAAS0G,GAAOhH,IAGZA,EAAc2F,YAChBrF,EAASc,EAAuBpB,IAEhCM,EAASW,EAAkBjB,IAPwB,2CAAJ,uDAetC2I,GAAqB,SAAAtJ,GAAK,MAAK,CAC1CiH,OAAQjH,EAAMuJ,cAActC,OAC5BM,MAAOvH,EAAMuJ,cAAchC,MAC3BZ,OAAQ3G,EAAMuJ,cAAc5C,SAGfwC,MAAf,QCzCeK,GAxBI,SAAC,GAKb,IAJLC,EAII,EAJJA,kBAEAC,GAEI,EAHJC,iBAGI,EAFJD,gBACAE,EACI,EADJA,mBAEA,OACE,kBAACtF,GAAD,KACE,kBAACC,GAAD,KACyB,IAAtBkF,GACC,kBAAC/E,GAAD,CAAkBmF,QAAS,kBAAMD,MAAjC,aAKJ,kBAACnF,GAAD,KACE,kBAACC,GAAD,CAAkBmF,QAAS,kBAAMH,MAAjC,W,SCZOI,GATM,SAAC,GAAgC,IAA9BtJ,EAA6B,EAA7BA,GAAIuJ,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,OACtC,OACE,kBAAC/D,GAAD,CACEhB,eAAgB8E,EAChBF,QAAS,kBAAMG,EAAOxJ,OCuBbyJ,GAtBc,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,cAAeC,EAAwB,EAAxBA,UAAWH,EAAa,EAAbA,OACxD,OACE,kBAACjE,GAAD,KACE,kBAACG,GAAD,uBACCgE,GAAiBA,EAActG,OAC9B,kBAACoC,GAAD,KACGkE,EAAcE,MAAM,EAAGD,GAAW7C,KAAI,SAAA/G,GAAK,OAC1C,kBAAC,GAAD,CACE8J,IAAK9J,EAAMC,GACXA,GAAID,EAAMC,GACVwJ,OAAQA,EACRD,WAAU,6CAAwCxJ,EAAM+J,YAA9C,WAKhB,4C,oBCsQOC,GArQG,SAAC,GAA2C,IAAzChK,EAAwC,EAAxCA,MAAOyB,EAAiC,EAAjCA,gBAAiBmI,EAAgB,EAAhBA,UACrClJ,EAAWuJ,cACT3K,EAAc4D,YAAYvB,GAA1BrC,UAFmD,EAInB2D,mBAASjD,GAJU,mBAIpDkK,EAJoD,KAItCC,EAJsC,OAKjBlH,mBAAS,IALQ,mBAKpD0G,EALoD,KAKrCS,EALqC,OAMLnH,mBAAS,MANJ,mBAMpDoH,EANoD,KAM/BC,EAN+B,OAOGrH,mBAC5DjD,EAAM+F,aARmD,mBAOpDwE,EAPoD,KAO3BC,EAP2B,OA0BvDH,GAA4CH,EAb9CjK,GAbyD,EAYzD8F,YAZyD,EAazD9F,IACA8J,EAdyD,EAczDA,YACAU,EAfyD,EAezDA,MACAC,EAhByD,EAgBzDA,QACAC,EAjByD,EAiBzDA,OACAC,EAlByD,EAkBzDA,QACAC,EAnByD,EAmBzDA,SACAC,EApByD,EAoBzDA,aACAC,EArByD,EAqBzDA,kBACAC,EAtByD,EAsBzDA,OACAC,EAvByD,EAuBzDA,QACAC,EAxByD,EAwBzDA,aACAC,EAzByD,EAyBzDA,SAIG1J,IACHA,EAAkBtB,GA9BuC,MAiCjC8C,oBAAS,GAjCwB,mBAiCpDmI,EAjCoD,KAiC7CC,EAjC6C,KAkCrDjE,EAAS,WACbiE,GAAUD,GACLA,EAMHd,EAAuB,MALvBgB,KAiBAC,EAAc,qCAPd3B,GAAa,EACP,OAEA,QAIQ,OAAyC5J,EAAM+J,aAC5D/J,EAAM+J,aAAgBwB,IACzBA,EAAiBC,MAInB,IAAIC,EAAiB,yCAAqC1B,GACrDA,GAAgB0B,IACnBA,EAAoBD,MAGtB,IAAME,EAAiB,uCAAG,0CAAA9K,EAAA,6DAAO+K,EAAP,+BAAiB1L,EAAjB,SACFyH,KAAMC,IAAN,kBAAqBgE,IADnB,OAClBC,EADkB,OAExBzB,EAAgB,gBAAKyB,EAAQ/D,KAAd,CAAoB9B,YAAa/F,EAAM+F,eAF9B,2CAAH,qDAKjB8F,EAAwB,uCAAG,WAAM5L,GAAN,iBAAAW,EAAA,sEACT8G,KAAMC,IAAN,kBAAqB1H,IADZ,OACzB2L,EADyB,OAGzBE,EAAmBxM,EAAUS,MACjC,SAAAC,GAAK,OAAIA,EAAMC,KAAO2L,EAAQ/D,KAAK5H,MAGnCqK,EADEwB,EACqB,gBAAKF,EAAQ/D,KAAd,CAAoB9B,aAAa,IAEhC,gBAAK6F,EAAQ/D,KAAd,CAAoB9B,aAAa,KAT1B,2CAAH,sDAexBuF,EAAkB,uCAAG,0CAAA1K,EAAA,6DAAO+K,EAAP,+BAAiB1L,EAAjB,SACGyH,KAAMC,IAAN,kBAAqBgE,EAArB,eADH,QACnBhC,EADmB,QAEP9B,KAAKtB,SACrB6D,EAAiBT,EAAc9B,KAAKtB,SAHb,2CAAH,qDAOlBwF,GAAoB,uCAAG,WAAM9L,GAAN,SAAAW,EAAA,sDAC3BiL,EAAyB5L,GACzBqL,EAAmBrL,GAFQ,2CAAH,sDAKpB+L,GAAc,SAAAC,GAElB,MAAO,IADOA,EAAIC,WAAWC,QAAQ,0BAA2B,QAS5DC,GAAkB,SAAAC,GACtBA,EAAEC,kBACF,IAAIxM,EAAa,KAGbuK,GACFvK,EAAU,cACRiG,aAAcsE,EAAoBtE,aAC/BsE,GAELC,EAAuB,gBAClBD,EADiB,CAEpBtE,aAAcsE,EAAoBtE,gBAGpCjG,EAAaoK,EAGfxJ,EAASe,EAAgB3B,KAiD3B,OAlBAyM,qBAAU,YACQ,uCAAG,sBAAA3L,EAAA,sDACjB8K,IADiB,2CAAH,qDAGhBc,KACC,IAIHD,qBAAU,WACRpC,EAAgB,gBAAKD,EAAN,CAAoBnE,YAAa/F,EAAM+F,iBACrD,CAAC/F,EAAM+F,cAGVwG,qBAAU,YA5B2B,WACnC,IAAME,EAAepC,GAEjBH,EAEExI,EAAQpC,EAAUS,MAAK,SAAAC,GAAK,OAAIA,EAAMC,KAAOwM,EAAaxM,MAG9DuK,IADE9I,GAsBJgL,KACC,CAACrC,EAAqB/K,IAGvB,kBAACiF,GAAD,CAAOG,eAAc,cAAS6G,EAAT,KAA4BjC,QAASlC,GACxD,4BAAKqD,GACL,kBAAC7E,GAAD,CAAe0D,QAAS8C,IACtB,kBAACvG,GAAD,CAAWE,YAlDmB,WAClC,IAAM0G,EAAevC,EAKrB,OAHc5K,EAAUS,MAAK,SAAAC,GAAK,OAAIA,EAAMC,KAAOwM,EAAaxM,MAIvD,EAEA,EAyCmB0M,MAE1B,kBAAChI,GAAD,CAAaiI,OAAQxB,EAAOhE,OAAQA,GAClC,kBAACvC,GAAD,KACE,kBAACe,GAAD,CAAe0D,QAAS8C,IACtB,kBAACvG,GAAD,CAAWE,YAAawE,EAA0B,EAAI,KAExD,kBAACtE,GAAD,CAAaqD,QAASlC,IACtB,kBAACrC,GAAD,KACE,kBAACC,GAAD,KACE,kBAACC,GAAD,CAAY4H,IAAG,UAAKpB,MAEtB,kBAACtG,GAAD,KACE,4BAAKsF,GACL,4BAAKC,GACL,kBAACtF,GAAD,KACGuF,GACC,kBAACtF,GAAD,KACE,sCACCsF,EAAOd,MAAM,EAAG,GAAG9C,KAAI,SAAA+F,GAAK,OAC3B,uBAAGhD,IAAKgD,EAAM7M,IAAK6M,EAAM1N,UAI9BwL,EACC,kBAACvF,GAAD,KACE,uCACA,2BAAIuF,EAAJ,aAEA,KACHE,EACC,kBAACzF,GAAD,CAASC,OAAQyH,OAAOC,WAAa,KACnC,wCACA,2BA5GA,IAAIC,KA4GQnC,GA3GboC,gBA6GC,KACHhC,EACC,kBAAC7F,GAAD,CAASC,OAAQyH,OAAOC,WAAa,KACnC,sCACA,2BAAI9B,IAEJ,KACHH,EACC,kBAAC1F,GAAD,CAASC,OAAQyH,OAAOC,WAAa,KACnC,wCACA,2BAAIjC,EAAkBoC,gBAEtB,KACHhC,EACC,kBAAC9F,GAAD,CAASC,OAAQyH,OAAOC,WAAa,KACnC,uCACA,2BACE,uBAAG1J,KAAM6H,GAAT,UAGF,KACHH,EACC,kBAAC3F,GAAD,CAASC,OAAQyH,OAAOC,WAAa,KACnC,sCACA,2BAAIhB,GAAYhB,KAEhB,KACHC,EACC,kBAAC5F,GAAD,CAASC,OAAQyH,OAAOC,WAAa,KACnC,uCACA,2BAAIhB,GAAYf,KAEhB,QAITJ,GAAY,kBAACtF,GAAD,KAAcsF,GAC3B,kBAAC,GAAD,CACElB,cAAeA,EACfC,UAAWA,EACXH,OAAQsC,S,0hBCnRpB,IAAMqB,GAAiBvL,IAAOO,IAAV,MAMP,SAAAL,GAAK,OAAIA,EAAMC,MAAMqC,aASb,SAAAtC,GAAK,OAAIA,EAAMC,MAAMyC,gBAC7B,SAAA1C,GAAK,OAAIA,EAAMC,MAAME,SACV,SAAAH,GAAK,OAAIA,EAAMC,MAAMO,QAK9B,SAAAR,GAAK,OAAIA,EAAMC,MAAMM,QAChB,SAAAP,GAAK,OAAIA,EAAMC,MAAMO,QAS1B8K,GAJD,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACf,OAAO,kBAACF,GAAD,KAAiBE,ICoDXC,GA9EG,SAAC,GAQZ,IAPL7G,EAOI,EAPJA,OACAN,EAMI,EANJA,OACAoH,EAKI,EALJA,SACAC,EAII,EAJJA,YACAhM,EAGI,EAHJA,gBACAiM,EAEI,EAFJA,cACA9D,EACI,EADJA,UACI,EAC8C3G,mBAAS,GADvD,mBACGiG,EADH,KACsByE,EADtB,OAE4C1K,mBAAS2G,GAFrD,mBAEGR,EAFH,KAEqBwE,EAFrB,KAcEzE,EAAc,uCAAG,sBAAAvI,EAAA,2DAEnBwI,EAAmBQ,EAAYlD,EAAOrD,QACtCoK,EAAcD,GAHK,gCAKbE,IALa,OAQrBC,GAAqB,SAAAE,GAAS,OAAIA,EAAYjE,KAC9CgE,GAAoB,SAAAC,GAAS,OAAIA,EAAYjE,KATxB,2CAAH,qDAmBpB,OARA2C,qBAAU,WACR,IAAMuB,EAAgBC,KAAKC,IAAI5E,EAAmBF,GAC5C+E,EAAerE,EAAYkE,EAC7B1E,EAAmB6E,EAAevH,EAAOrD,QAC3CuK,GAAoB,SAAAC,GAAS,OAAIA,EAAYI,OAE9C,CAACrE,IAEW,YAAXxD,EAEA,kBAAC,GAAD,CAAO0B,QAAQ,wDAIJ,SAAX1B,GAAgC,YAAXA,EAErB,kBAAC,GAAD,KACE,uBAAG8H,MAAO,CAAEC,UAAW,OAAQC,UAAW,WAA1C,eAMJ,oCACE,kBAAC,GAAD,CACElF,kBAAmBA,EACnBE,iBAAkBA,EAClBC,mBAhDqB,WACrBH,GAAqBU,GACvB+D,GAAqB,SAAAE,GAAS,OAAIA,EAAYjE,KAC9CgE,GAAoB,SAAAC,GAAS,OAAIA,EAAYjE,OAE7C+D,EAAqB,GACrBC,EAAoBhE,KA2ClBT,eAAgBA,IAElB,kBAAC7E,GAAD,KACGoC,EAAOmD,MAAMX,EAAmBE,GAAkBrC,KAAI,SAAA/G,GAAK,OAC1D,kBAAC,GAAD,CACE8J,IAAK9J,EAAMC,GACXmG,OAAQA,EACRpG,MAAOA,EACPyB,gBAAiBA,EACjBmI,UAAWA,UC1DVyE,GAAiB,SAAAC,GAC5B,OAAQA,GACN,IAAK,cACH,OAAO9G,GACT,IAAK,WACH,OAAOgB,GACT,IAAK,YACH,OAAOL,GACT,IAAK,UACH,OAAOU,KCZE0F,GAbO,WAAO,IAAD,EACFtL,mBAAS,GADP,mBACnBuL,EADmB,KACbC,EADa,KAU1B,OARAC,2BAAgB,WACd,SAASC,IACPF,EAAQ1B,OAAOC,YAIjB,OAFAD,OAAO6B,iBAAiB,SAAUD,GAClCA,IACO,kBAAM5B,OAAO8B,oBAAoB,SAAUF,MACjD,IACI,CAACH,ICqKKM,GA5IY,SAAC,GAAc,IAAZR,EAAW,EAAXA,KACtB5N,EAAWuJ,cADsB,EAEvBsE,KAATQ,EAFgC,sBAGL9L,mBAhB9B8J,OAAOC,YAAc,KAChB,EACED,OAAOC,YAAc,IACvB,EACED,OAAOC,YAAc,IACvB,EACED,OAAOC,YAAc,IACvB,EAEA,GAI8B,mBAGhCpD,EAHgC,KAGrBoF,EAHqB,OAImB/L,mBAAS,GAJ5B,mBAIhCgM,EAJgC,KAITC,EAJS,OAKejM,mBAAS,GALxB,mBAKhCkM,EALgC,KAKXC,EALW,OAMenM,mBAAS,GANxB,mBAMhCoM,EANgC,KAMXC,EANW,OAOarM,mBAAS,GAPtB,mBAOhCsM,EAPgC,KAOZC,EAPY,OAanCtM,YAAY8E,IAHNC,EAV6B,EAUrCvB,OACO+I,EAX8B,EAWrCzI,MACQ0I,EAZ6B,EAYrCtJ,OAZqC,EAmBnClD,YAAYwF,IAHNC,EAhB6B,EAgBrCjC,OACOiJ,EAjB8B,EAiBrC3I,MACQ4I,EAlB6B,EAkBrCxJ,OAlBqC,EAyBnClD,YAAYmF,IAHNC,EAtB6B,EAsBrC5B,OACOmJ,EAvB8B,EAuBrC7I,MACQ8I,EAxB6B,EAwBrC1J,OAxBqC,EA+BnClD,YAAY6F,IAHNC,EA5B6B,EA4BrCtC,OACOqJ,EA7B8B,EA6BrC/I,MACQgJ,EA9B6B,EA8BrC5J,OAGIsH,EAAgB,WACpB,IAAIuC,EAAQ,KACZ,OAAQ3B,GACN,IAAK,cACHY,GAAyB,SAAArB,GAAS,OAAIA,EAAY,KAClDoC,EAAQ5B,GAAeC,GACvB5N,EAASuP,EAAMhB,EAAwB,IACvC,MACF,IAAK,WACHG,GAAuB,SAAAvB,GAAS,OAAIA,EAAY,KAChDoC,EAAQ5B,GAAeC,GACvB5N,EAASuP,EAAMd,EAAsB,IACrC,MACF,IAAK,YACHG,GAAuB,SAAAzB,GAAS,OAAIA,EAAY,KAChDoC,EAAQ5B,GAAeC,GACvB5N,EAASuP,EAAMZ,EAAsB,IACrC,MACF,IAAK,UACHG,GAAsB,SAAA3B,GAAS,OAAIA,EAAY,KAC/CoC,EAAQ5B,GAAeC,GACvB5N,EAASuP,EAAMV,EAAqB,MAO1ChD,qBAAU,WAER,IAAM0D,EAAQ5B,GAAeC,GAC7B5N,EAASuP,EAAM,IAGfvP,EAASD,OACR,IAEHiO,2BAAgB,WAEZM,EADED,GAAS,KACE,EACJA,GAAS,IACL,EACJA,GAAS,IACL,EACJA,GAAS,IACL,EAEA,KAEd,CAACA,IAuDJ,OAAO,oCArDqB,WAC1B,OAAQT,GACN,IAAK,cACH,OACE,kBAAC,GAAD,CACE5H,OAAQuB,EACR7B,OAAQsJ,EACRjO,gBAAiBsG,GACjB2F,cAAeA,EACf9D,UAAWA,EACX6D,YAAawB,EACbzB,SAAUiC,IAGhB,IAAK,YACH,OACE,kBAAC,GAAD,CACE/I,OAAQ4B,EACRlC,OAAQ0J,EACRrO,gBAAiB2G,GACjBsF,cAAeA,EACf9D,UAAWA,EACX6D,YAAa4B,EACb7B,SAAUqC,IAGhB,IAAK,WACH,OACE,kBAAC,GAAD,CACEnJ,OAAQiC,EACRvC,OAAQwJ,EACRnO,gBAAiBgH,GACjBiF,cAAeA,EACf9D,UAAWA,EACX6D,YAAa0B,EACb3B,SAAUmC,IAGhB,IAAK,UACH,OACE,kBAAC,GAAD,CACEjJ,OAAQsC,EACR5C,OAAQ4J,EACRvO,gBAAiBqH,GACjB4E,cAAeA,EACf9D,UAAWA,EACX6D,YAAa8B,EACb/B,SAAUuC,KAMVG,KChKGC,GATK,SAAC,GAAuB,IAArB7B,EAAoB,EAApBA,KAAM8B,EAAc,EAAdA,QAC3B,OACE,kBAACxM,GAAD,KACE,kBAACC,GAAD,KAAUuM,GACV,kBAAC,GAAD,CAAoB9B,KAAMA,MCMjB+B,GAXM,WACnB,OACE,kBAAC5M,GAAD,KACE,kBAAC,GAAD,CAAa6K,KAAK,cAAc8B,QAAQ,4BACxC,kBAAC,GAAD,CAAa9B,KAAK,YAAY8B,QAAQ,cACtC,kBAAC,GAAD,CAAa9B,KAAK,UAAU8B,QAAQ,YACpC,kBAAC,GAAD,CAAa9B,KAAK,WAAW8B,QAAQ,e,y3DCA3C,IAAME,GAAsBzO,YAAO4B,GAAP5B,CAAH,KAKb0O,KAQAC,MAONC,GAAY5O,IAAO6B,QAAV,MAmBTgN,GAAc7O,IAAO8O,GAAV,MAKXC,GAAa/O,IAAOiC,GAAV,MAMV+M,GAAgBhP,IAAOO,IAAV,MAQA,SAAAL,GAAK,OAAIA,EAAMC,MAAMyC,gBAGlCqM,GAAQjP,YAAOgE,GAAPhE,CAAH,MACA,SAAAE,GAAK,OAAIA,EAAMC,MAAMgE,OAG1B+K,GAAqBlP,YAAO+D,GAAP/D,CAAH,MAQlBmP,GAAYnP,IAAOoC,EAAV,MA6BAgN,GArBK,WAClB,OACE,yBAAK/C,MAAO,CAAEgD,WAAY,sBACxB,kBAACZ,GAAD,KACE,kBAACG,GAAD,KACE,kBAACC,GAAD,uBACA,kBAACE,GAAD,iCACA,kBAACC,GAAD,KAEE,kBAACE,GAAD,KACE,kBAACD,GAAD,OAGF,kBAACE,GAAD,sDC3FGG,GATF,WACX,OACE,6BACE,kBAAC,GAAD,MACA,kBAAC,GAAD,Q,yICUN,IAAMC,GAAmBvP,YAAOgC,GAAPhC,CAAH,MA4FPwP,GAvFO,WACpB,IAAM3Q,EAAWuJ,cACT3K,EAAc4D,YAAYvB,GAA1BrC,UAFkB,EAGwB2D,mBAAS,IAHjC,mBAGnBqO,EAHmB,KAGAC,EAHA,KAKpBC,EAAoB,uCAAG,kDAAA5Q,EAAA,sDACvB6Q,EAAqB,GADE,8BAGPnS,EAHO,yEAGhBU,EAHgB,QAIjBC,EAAOD,EAAPC,GAJiB,UAKFyH,KAAMC,IAAN,kBAAqB1H,EAArB,uBALE,QAKnB2H,EALmB,QAOrB8J,EAAY9J,EAASC,KAAKtB,SAAW,IAC3BlD,SACZqO,EAAYA,EAAU7H,MAAM,EAAG,IAE3B8H,EAAeC,EAAiBH,EAAoBC,GAC1DD,EAAkB,aAAOE,GAZA,6QAcrBE,EAAuBC,EAAmBL,GAChDF,EAAqBM,GAfM,4EAAH,qDAkBpBC,EAAqB,SAAAC,GAKzB,OAJgCA,EAAgBC,QAC9C,SAAAhS,GAAK,OAAKV,EAAU2S,MAAK,SAAAC,GAAC,OAAIA,EAAEjS,KAAOD,EAAMC,UAM3C2R,EAAmB,SAACO,EAAYC,GAKpC,MAJoB,uBAAOD,GAAP,aAAsBC,IACNJ,QAClC,SAAChS,EAAOK,EAAOgS,GAAf,OAAwBhS,IAAUgS,EAAK/R,WAAU,SAAA4R,GAAC,OAAIA,EAAEjS,KAAOD,EAAMC,UAczE,OATAsM,qBAAU,WAER7L,EAASD,OACR,IAEH8L,qBAAU,WACRiF,MACC,CAAClS,IAGF,oCACE,kBAAC8R,GAAD,0BACC9R,EAAU+D,OACT,oCACE,kBAACO,GAAD,KACE,kBAACU,GAAD,KACGhF,EAAUyH,KAAI,SAAA/G,GAAK,OAClB,kBAAC,GAAD,CACE8J,IAAK9J,EAAMC,GACXD,MAAOA,EACPyB,gBAAiBA,SAKzB,kBAACoC,GAAD,CAASqK,MAAO,CAAEoE,aAAc,SAAhC,gCAC+B,mCAD/B,aAGA,kBAAChO,GAAD,KACGgN,EAAkBvK,KAAI,SAAA/G,GAAK,OAC1B,kBAAC,GAAD,CACE8J,IAAK9J,EAAMC,GACXD,MAAOA,EACPyB,gBAAiBA,SAMzB,kBAAC,GAAD,KACE,qFACA,kBAAC,IAAD,CAAM0B,GAAG,KAAT,+B,iKClGV,IAAMoP,GAA8B1Q,YAAO4B,GAAP5B,CAAH,MAgBlBsP,GARF,WACX,OACE,kBAACoB,GAAD,KACE,kBAAC,GAAD,QCUSC,GAnBH,WACV,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWxB,KACjC,kBAAC,IAAD,CAAOsB,KAAK,aAAaE,UAAWC,KACpC,kBAAC,IAAD,CACEC,OAAQ,kBACN,wBAAI3E,MAAO,CAAEC,UAAW,SAAUC,UAAW,SAA7C,4BCTG0E,eAAe,CAC5BC,QAAS,CACPzT,UAAW0T,EACX/K,iBAAkBgL,GAClB3K,eAAgB4K,GAChBlK,cAAemK,GACfxK,eAAgByK,MCMpBC,IAASR,OACP,kBAAC,IAAD,CAAe7Q,MAXH,CACZgE,IAAK,mBACL9D,MAAO,OACPD,KAAM,kBACNK,KAAM,oBACNC,KAAM,oBACN8B,UAAW,iBACXI,aAAc,WAKZ,kBAAC,IAAD,CAAU6O,MAAOA,IACf,kBAAC,GAAD,QAGJC,SAASC,eAAe,U,mBCzB1BC,EAAOC,QAAU,IAA0B,gD,mBCA3CD,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,yC","file":"static/js/main.cee98026.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const watchlistSlice = createSlice({\r\n  name: 'WATCHLIST',\r\n  initialState: {\r\n    watchlist: []\r\n  },\r\n  reducers: {\r\n    getLocalStorageSuccess: (state, action) => {\r\n      const watchlistedMovies = action.payload;\r\n      state.watchlist = watchlistedMovies;\r\n    },\r\n    add: (state, action) => {\r\n      const movieToAdd = action.payload;\r\n      const found = state.watchlist.find(movie => movie.id === movieToAdd.id);\r\n      if (!found) {\r\n        state.watchlist.push(movieToAdd);\r\n      }\r\n    },\r\n    remove: (state, action) => {\r\n      const selectedMovie = action.payload;\r\n      const index = state.watchlist.findIndex(\r\n        movie => movie.id === selectedMovie.id\r\n      );\r\n      if (index !== -1) {\r\n        state.watchlist.splice(index, 1);\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport const { getLocalStorageSuccess, add, remove } = watchlistSlice.actions;\r\n\r\n// Thunks\r\n\r\nexport const fetchLocalStorage = () => async (dispatch, getState) => {\r\n  try {\r\n    const storedMovies = JSON.parse(localStorage.getItem('movies') || '[]');\r\n    dispatch(getLocalStorageSuccess(storedMovies));\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const addToLocalStorage = selectedMovie => async dispatch => {\r\n  const storedMovies = JSON.parse(localStorage.getItem('movies') || '[]');\r\n\r\n  const found = storedMovies.find(movie => movie.id === selectedMovie.id);\r\n  if (!found) {\r\n    storedMovies.push(selectedMovie);\r\n    dispatch(add(selectedMovie));\r\n  }\r\n  localStorage.setItem('movies', JSON.stringify(storedMovies));\r\n};\r\n\r\nexport const removeFromLocalStorage = selectedMovie => async dispatch => {\r\n  const storedMovies = JSON.parse(localStorage.getItem('movies') || '[]');\r\n\r\n  const index = storedMovies.findIndex(movie => movie.id === selectedMovie.id);\r\n  if (index !== -1) {\r\n    storedMovies.splice(index, 1);\r\n    dispatch(remove(selectedMovie));\r\n  }\r\n  localStorage.setItem('movies', JSON.stringify(storedMovies));\r\n};\r\n\r\nexport const toggleWatchlist = selectedMovie => async (dispatch, getState) => {\r\n  const watchlist = getState().watchlist.watchlist;\r\n  const found = watchlist.find(movie => movie.id === selectedMovie.id);\r\n\r\n  if (found) {\r\n    dispatch(removeFromLocalStorage(selectedMovie));\r\n  } else {\r\n    dispatch(addToLocalStorage(selectedMovie));\r\n  }\r\n};\r\n\r\nexport const watchlistState = state => ({\r\n  watchlist: state.watchlist.watchlist\r\n});\r\n\r\nexport default watchlistSlice.reducer;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { watchlistState } from '../features/movies/slices/watchlistSlice';\r\nimport { FaGithub, FaFilm } from 'react-icons/fa';\r\nimport { GiPopcorn } from 'react-icons/gi';\r\nimport { Badge } from 'reactstrap';\r\nimport styled from 'styled-components';\r\n\r\nconst Nav = styled.nav`\r\n  background: ${props => props.theme.gray};\r\n  color: ${props => props.theme.light};\r\n  height: 60px;\r\n  width: 100%;\r\n  position: fixed;\r\n  z-index: 12;\r\n`;\r\n\r\nconst NavInnerContainer = styled.div`\r\n  max-width: 1100px;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: auto;\r\n  padding: 0 1rem;\r\n`;\r\n\r\nconst LogoContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 50%;\r\n  font-size: 1.25rem;\r\n  height: 37px;\r\n  width: 42px;\r\n  background: ${props => props.theme.dark};\r\n  color: ${props => props.theme.gold};\r\n`;\r\n\r\nconst NavList = styled.ul`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n  list-style: none;\r\n  margin-bottom: 0;\r\n\r\n  a {\r\n    text-decoration-color: ${props => props.theme.gold};\r\n  }\r\n`;\r\n\r\nconst NavItem = styled.li`\r\n  padding: 0.75rem;\r\n  color: ${props => props.theme.light};\r\n  font-weight: bold;\r\n  letter-spacing: 1px;\r\n  position: relative;\r\n`;\r\n\r\nconst CustomBadge = styled(Badge)`\r\n  color: ${props => props.theme.light};\r\n  background: hsl(46, 80%, 40%);\r\n  vertical-align: baseline;\r\n  padding-right: 0.6em;\r\n  padding-left: 0.55em;\r\n  margin-left: 0.3rem;\r\n  font-size: 0.8rem;\r\n  height: 19px;\r\n  width: 20px;\r\n  line-height: 0.9;\r\n  position: absolute;\r\n  top: 16px;\r\n  right: -7px;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst GithubIcon = styled(FaGithub)`\r\n  color: ${props => props.theme.light};\r\n  font-size: 1.25rem;\r\n  margin-left: 2rem;\r\n`;\r\n\r\nconst AppNavbar = props => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const { watchlist } = useSelector(watchlistState);\r\n\r\n  return (\r\n    <Nav>\r\n      <NavInnerContainer>\r\n        <Link to='/'>\r\n          <LogoContainer>\r\n            <GiPopcorn />\r\n            {/* <FaFilm /> */}\r\n          </LogoContainer>\r\n        </Link>\r\n        <NavList>\r\n          <Link to='/'>\r\n            <NavItem>Home</NavItem>\r\n          </Link>\r\n          <Link to='/watchlist'>\r\n            <NavItem>\r\n              Watchlist\r\n              <CustomBadge pill>\r\n                <span>{watchlist.length}</span>\r\n              </CustomBadge>\r\n            </NavItem>\r\n          </Link>\r\n          <NavItem>\r\n            <a\r\n              href='https://github.com/julianvazq/movie-explorer'\r\n              target='_blank'\r\n              rel='noopener noreferrer'\r\n            >\r\n              <GithubIcon />\r\n            </a>\r\n          </NavItem>\r\n        </NavList>\r\n      </NavInnerContainer>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default AppNavbar;\r\n","import styled from 'styled-components';\r\nimport { Modal, ModalBody, Badge } from 'reactstrap';\r\nimport { MdClose } from 'react-icons/md';\r\nimport { FaHeart } from 'react-icons/fa';\r\n\r\n/* Containers */\r\nexport const FullWidthContainer = styled.section`\r\n  padding: 2rem 0.5rem;\r\n  background-color: ${props => (props.bg ? props.bg : props.theme.dark)};\r\n  min-height: 100vh;\r\n\r\n  @media (min-width: 600px) {\r\n    padding: 2rem;\r\n  }\r\n\r\n  @media (min-width: 1200px) {\r\n    margin: 0rem auto;\r\n  }\r\n`;\r\n\r\nexport const MovieSectionContainer = styled.div`\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\n/* Headings */\r\nexport const Heading = styled.h2`\r\n  font-size: 1.25rem;\r\n  margin-bottom: 0;\r\n  padding-bottom: 0.5rem;\r\n  display: inline-block;\r\n  border-bottom: 1.5px solid ${props => props.theme.gold};\r\n  color: ${props => props.theme.light};\r\n\r\n  @media (min-width: 500px) {\r\n    font-size: 1.5rem;\r\n  }\r\n\r\n  @media (min-width: 500px) {\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\n\r\n/* Pagination */\r\nexport const PaginationContainer = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const PreviousPagination = styled.p`\r\n  flex: 50%;\r\n  margin-bottom: 0;\r\n  text-align: left;\r\n`;\r\n\r\nexport const NextPagination = styled.p`\r\n  flex: 50%;\r\n  margin-bottom: 0;\r\n  text-align: right;\r\n`;\r\n\r\nexport const PaginationButton = styled.span`\r\n  display: inline-block;\r\n  padding: 1rem 1rem 0.5rem;\r\n  font-size: 1rem;\r\n  text-transform: uppercase;\r\n  letter-spacing: 1.5px;\r\n  font-weight: bold;\r\n  color: ${props => props.theme.grayLight};\r\n  cursor: pointer;\r\n`;\r\n\r\n/* Movie Grid */\r\nexport const Grid = styled.div`\r\n  display: grid;\r\n  grid-gap: 0.25rem;\r\n  grid-template-columns: repeat(2, 1fr);\r\n\r\n  @media (min-width: 375px) {\r\n    grid-template-columns: repeat(3, 1fr);\r\n  }\r\n\r\n  @media (min-width: 700px) {\r\n    grid-template-columns: repeat(4, 1fr);\r\n  }\r\n\r\n  @media (min-width: 900px) {\r\n    grid-template-columns: repeat(5, 1fr);\r\n  }\r\n\r\n  @media (min-width: 1200px) {\r\n    grid-template-columns: repeat(6, 1fr);\r\n  }\r\n`;\r\n\r\n/* Movie Card */\r\nexport const Movie = styled.article`\r\n  box-shadow: 0px 0px 5px 1px rgba(133, 133, 133, 0.15);\r\n  border-radius: ${props => props.theme.borderRadius};\r\n  background: ${props =>\r\n    props.background_img ? props.background_img : props.theme.dark};\r\n  min-height: 200px;\r\n  background-position: center;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  transform: scale(1);\r\n  transition: background 250ms ease-in, transform 250ms ease-in-out;\r\n  color: ${props => props.theme.light};\r\n  display: flex;\r\n\r\n  h1 {\r\n    font-size: 0.8rem;\r\n    opacity: 0;\r\n    transition: opacity 250ms ease-in;\r\n    margin: auto;\r\n    padding: 0 0.5rem;\r\n    align-self: center;\r\n    text-align: center;\r\n  }\r\n\r\n  &:hover {\r\n    background: linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)),\r\n      ${props => props.background_img};\r\n    background-position: center;\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    transform: scale(1.1);\r\n    z-index: 10;\r\n    cursor: pointer;\r\n  }\r\n\r\n  &:hover h1 {\r\n    opacity: 1;\r\n  }\r\n\r\n  @media (min-width: 500px) {\r\n    min-height: 250px;\r\n\r\n    h1 {\r\n      font-size: 1.25rem;\r\n    }\r\n  }\r\n\r\n  @media (min-width: 750px) {\r\n    min-height: 375px;\r\n  }\r\n`;\r\n\r\n/* Movie Modal */\r\nexport const CustomModal = styled(Modal)`\r\n  background: ${props => props.theme.gray} !important;\r\n  border-radius: ${props => props.theme.borderRadius};\r\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.22), 0 2px 2px rgba(0, 0, 0, 0.22),\r\n    0 4px 4px rgba(0, 0, 0, 0.22), 0 8px 8px rgba(0, 0, 0, 0.22),\r\n    0 16px 16px rgba(0, 0, 0, 0.22);\r\n  top: 9%;\r\n\r\n  @media (min-width: 600px) {\r\n    top: 0%;\r\n  }\r\n\r\n  @media (min-width: 700px) {\r\n    max-width: 600px !important;\r\n  }\r\n`;\r\n\r\nexport const CustomModalBody = styled(ModalBody)`\r\n  padding: 0;\r\n  background: ${props => props.theme.gray} !important;\r\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.52), 0 2px 2px rgba(0, 0, 0, 0.52),\r\n    0 4px 4px rgba(0, 0, 0, 0.52), 0 8px 8px rgba(0, 0, 0, 0.52),\r\n    0 16px 16px rgba(0, 0, 0, 0.52);\r\n`;\r\n\r\nexport const MainDiv = styled.div`\r\n  color: ${props => props.theme.light};\r\n  padding: 1.25rem 1.25rem 0.625rem;\r\n  display: flex;\r\n  min-height: 200px;\r\n`;\r\n\r\nexport const ImageContainer = styled.div`\r\n  flex: 50%;\r\n`;\r\nexport const MovieImage = styled.img`\r\n  width: 90%;\r\n  border-radius: ${props => props.theme.borderRadius};\r\n  background: ${props => props.background_img};\r\n  background-position: left;\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n\r\n  @media (min-width: 450px) {\r\n    width: 90%;\r\n    height: auto;\r\n  }\r\n`;\r\n\r\nexport const MovieHeader = styled.div`\r\n  flex: 50%;\r\n  padding-left: 0.5rem;\r\n\r\n  /* Title */\r\n  h1 {\r\n    font-size: 1rem;\r\n    font-weight: 700;\r\n    margin-bottom: 0.25rem;\r\n  }\r\n  /* Tagline */\r\n  h2 {\r\n    font-size: 0.9rem;\r\n    font-weight: 400;\r\n    color: ${props => props.theme.gold};\r\n    margin-bottom: 0;\r\n    margin-top: 0.25rem;\r\n  }\r\n\r\n  a {\r\n    color: ${props => props.theme.light};\r\n  }\r\n\r\n  @media (min-width: 600px) {\r\n    flex: 75%;\r\n  }\r\n`;\r\n\r\nexport const DetailsContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(1, 1fr);\r\n  grid-row-gap: 0.125rem;\r\n  margin-top: 0.5rem;\r\n\r\n  @media (min-width: 375px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n    grid-column-gap: 0.75rem;\r\n    grid-row-gap: 0.5rem;\r\n  }\r\n\r\n  @media (min-width: 450px) {\r\n    /* grid-template-columns: repeat(2, 1fr); */\r\n    /* grid-row-gap: 0.5rem; */\r\n  }\r\n`;\r\n\r\nexport const Details = styled.div`\r\n  visibility: ${props => (props.hidden ? 'hidden' : 'visible')};\r\n\r\n  h3 {\r\n    font-size: 0.8rem;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1.5px;\r\n    color: ${props => props.theme.grayLight} !important;\r\n    margin-bottom: 0.25rem !important;\r\n  }\r\n\r\n  p {\r\n    margin-bottom: 0;\r\n    font-size: 0.9rem;\r\n  }\r\n\r\n  @media (min-width: 450px) {\r\n    flex: 50%;\r\n  }\r\n`;\r\n\r\nexport const Description = styled.p`\r\n  margin: 0;\r\n  padding: 0.5rem 1.125rem 1.125rem;\r\n  font-size: 0.9rem;\r\n  color: ${props => props.theme.light};\r\n  line-height: 1.5;\r\n`;\r\n\r\nexport const SimilarMoviesContainer = styled.section`\r\n  /* min-height: 150px; */\r\n  padding: 1.125rem;\r\n  border-radius: ${props => props.theme.borderRadius};\r\n  background: ${props => props.theme.dark};\r\n\r\n  p {\r\n    margin-bottom: 0;\r\n    color: ${props => props.theme.grayLight};\r\n  }\r\n`;\r\n\r\nexport const SimilarMoviesGrid = styled.div`\r\n  display: grid;\r\n  grid-gap: 0.25rem;\r\n  grid-template-columns: repeat(2, 1fr);\r\n\r\n  @media (min-width: 375px) {\r\n    grid-template-columns: repeat(3, 1fr);\r\n  }\r\n\r\n  @media (min-width: 700px) {\r\n    grid-template-columns: repeat(4, 1fr);\r\n  }\r\n\r\n  @media (min-width: 900px) {\r\n    grid-template-columns: repeat(5, 1fr);\r\n  }\r\n\r\n  @media (min-width: 1200px) {\r\n    grid-template-columns: repeat(6, 1fr);\r\n  }\r\n`;\r\n\r\nexport const MovieThumbnail = styled.div`\r\n  border-radius: ${props => props.theme.borderRadius};\r\n  background: ${props => props.background_img};\r\n  min-height: 150px;\r\n  background-position: center;\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const SimilarMoviesHeading = styled.h2`\r\n  font-size: 1.25rem;\r\n  color: ${props => props.theme.light};\r\n`;\r\n\r\nexport const IconContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  border-radius: 50%;\r\n  position: absolute;\r\n  top: 4px;\r\n  left: 5px;\r\n  height: 35px;\r\n  width: 37px;\r\n  background: hsla(46, 0%, 50%, 0.5);\r\n  transform: scale(1);\r\n  transition: all 250ms ease-in;\r\n\r\n  @media (min-width: 900px) {\r\n    &:hover {\r\n      transform: scale(1.1);\r\n      background: hsla(46, 0%, 50%, 0.5);\r\n    }\r\n  }\r\n`;\r\n\r\n/* Icons */\r\nexport const HeartIcon = styled(FaHeart)`\r\n  font-size: 1.125rem;\r\n  color: ${props => (props.watchlisted ? props.theme.red : '#fff')};\r\n  transition: color 250ms ease-in;\r\n`;\r\n\r\nexport const CloseButton = styled(MdClose)`\r\n  color: ${props => props.theme.red};\r\n  font-size: 2rem;\r\n  position: absolute;\r\n  right: 6px;\r\n  top: 3px;\r\n  cursor: pointer;\r\n`;\r\n","// Start fetching\r\nexport const setLoading = state => {\r\n  state.status = 'loading';\r\n};\r\n\r\n// Fetching failed\r\nexport const setFailure = (state, action) => {\r\n  console.log(action.payload);\r\n  state.error = action.payload;\r\n  state.status = 'failure';\r\n};\r\n\r\n// Fetching success\r\nexport const requestSuccess = (state, action) => {\r\n  const { results, total_pages } = action.payload;\r\n  const withDuplicates = state.movies.concat(results);\r\n  // Remove duplicates\r\n  state.movies = Array.from(new Set(withDuplicates.map(movie => movie.id))).map(\r\n    id => {\r\n      return withDuplicates.find(movie => movie.id === id);\r\n    }\r\n  );\r\n  state.pages = total_pages;\r\n  state.status = 'success';\r\n};\r\n\r\n// Handle toggle\r\nexport const handleToggle = (state, action) => {\r\n  const { id } = action.payload;\r\n  const movieToToggle = state.movies.find(movie => movie.id === id);\r\n  if (movieToToggle) {\r\n    movieToToggle.watchlisted = !movieToToggle.watchlisted;\r\n  }\r\n};\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { addToLocalStorage, removeFromLocalStorage } from './watchlistSlice';\r\nimport {\r\n  setLoading,\r\n  setFailure,\r\n  handleToggle,\r\n  requestSuccess\r\n} from './ReducerLogic';\r\nimport axios from 'axios';\r\n\r\nexport const nowPlayingMoviesSlice = createSlice({\r\n  name: 'NOW_PLAYING_MOVIES',\r\n  initialState: {\r\n    movies: [],\r\n    pages: null,\r\n    status: 'idle',\r\n    error: null\r\n  },\r\n  reducers: {\r\n    toggle: handleToggle,\r\n    startFetching: setLoading,\r\n    fetchingFailed: setFailure,\r\n    fetchingSuccess: requestSuccess\r\n  }\r\n});\r\n\r\nexport const {\r\n  toggle,\r\n  startFetching,\r\n  fetchingFailed,\r\n  fetchingSuccess\r\n} = nowPlayingMoviesSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\n\r\n/***  THUNKS  ***/\r\n// Fetch Movies\r\nexport const fetchNowPlayingMovies = page => async dispatch => {\r\n  dispatch(startFetching());\r\n  try {\r\n    const response = await axios.get(`/movies/nowplaying/${page}`);\r\n    dispatch(fetchingSuccess(response.data));\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch(fetchingFailed(err.message));\r\n  }\r\n};\r\n\r\n// Toggle watchlisted property | Add/remove watchlist\r\nexport const toggleWatchlistNowPlaying = selectedMovie => async dispatch => {\r\n  dispatch(toggle(selectedMovie));\r\n\r\n  // Add/remove logic inversed because of toggle\r\n  if (selectedMovie.watchlisted) {\r\n    dispatch(removeFromLocalStorage(selectedMovie));\r\n  } else {\r\n    dispatch(addToLocalStorage(selectedMovie));\r\n  }\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\n\r\nexport const nowPlayingState = state => ({\r\n  movies: state.nowPlayingMovies.movies,\r\n  pages: state.nowPlayingMovies.pages,\r\n  status: state.nowPlayingMovies.status\r\n});\r\n\r\nexport default nowPlayingMoviesSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { addToLocalStorage, removeFromLocalStorage } from './watchlistSlice';\r\nimport {\r\n  setLoading,\r\n  setFailure,\r\n  handleToggle,\r\n  requestSuccess\r\n} from './ReducerLogic';\r\nimport axios from 'axios';\r\n\r\nexport const topRatedMoviesSlice = createSlice({\r\n  name: 'TOP_RATED',\r\n  initialState: {\r\n    movies: [],\r\n    pages: null,\r\n    status: 'idle',\r\n    error: null\r\n  },\r\n  reducers: {\r\n    toggle: handleToggle,\r\n    startFetching: setLoading,\r\n    fetchingFailed: setFailure,\r\n    fetchingSuccess: requestSuccess\r\n  }\r\n});\r\n\r\nexport const {\r\n  toggle,\r\n  startFetching,\r\n  fetchingFailed,\r\n  fetchingSuccess\r\n} = topRatedMoviesSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\n\r\n/***  THUNKS  ***/\r\n// Fetch Movies\r\nexport const fetchTopRatedMovies = page => async dispatch => {\r\n  dispatch(startFetching());\r\n  try {\r\n    const response = await axios.get(`/movies/toprated/${page}`);\r\n    dispatch(fetchingSuccess(response.data));\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch(fetchingFailed(err.message));\r\n  }\r\n};\r\n\r\n// Toggle watchlisted property | Add/remove watchlist\r\nexport const toggleWatchlistTopRated = selectedMovie => async dispatch => {\r\n  dispatch(toggle(selectedMovie));\r\n\r\n  // Add/remove logic inversed because of toggle\r\n  if (selectedMovie.watchlisted) {\r\n    dispatch(removeFromLocalStorage(selectedMovie));\r\n  } else {\r\n    dispatch(addToLocalStorage(selectedMovie));\r\n  }\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\n\r\nexport const topRatedMoviesState = state => ({\r\n  movies: state.topRatedMovies.movies,\r\n  pages: state.topRatedMovies.pages,\r\n  status: state.topRatedMovies.status\r\n});\r\n\r\nexport default topRatedMoviesSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { addToLocalStorage, removeFromLocalStorage } from './watchlistSlice';\r\nimport {\r\n  setLoading,\r\n  setFailure,\r\n  handleToggle,\r\n  requestSuccess\r\n} from './ReducerLogic';\r\nimport axios from 'axios';\r\n\r\nexport const upcomingMoviesSlice = createSlice({\r\n  name: 'UPCOMING',\r\n  initialState: {\r\n    movies: [],\r\n    pages: null,\r\n    status: 'idle',\r\n    error: null\r\n  },\r\n  reducers: {\r\n    toggle: handleToggle,\r\n    startFetching: setLoading,\r\n    fetchingFailed: setFailure,\r\n    fetchingSuccess: requestSuccess\r\n  }\r\n});\r\n\r\nexport const {\r\n  toggle,\r\n  startFetching,\r\n  fetchingFailed,\r\n  fetchingSuccess\r\n} = upcomingMoviesSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\n\r\n/***  THUNKS  ***/\r\n// Fetch Movies\r\nexport const fetchUpcomingMovies = page => async dispatch => {\r\n  dispatch(startFetching());\r\n  try {\r\n    const response = await axios.get(`/movies/upcoming/${page}`);\r\n    dispatch(fetchingSuccess(response.data));\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch(fetchingFailed(err.message));\r\n  }\r\n};\r\n\r\n// Toggle watchlisted property | Add/remove watchlist\r\nexport const toggleWatchlistUpcoming = selectedMovie => async dispatch => {\r\n  dispatch(toggle(selectedMovie));\r\n\r\n  // Add/remove logic inversed because of toggle\r\n  if (selectedMovie.watchlisted) {\r\n    dispatch(removeFromLocalStorage(selectedMovie));\r\n  } else {\r\n    dispatch(addToLocalStorage(selectedMovie));\r\n  }\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\n\r\nexport const upcomingMoviesState = state => ({\r\n  movies: state.upcomingMovies.movies,\r\n  pages: state.upcomingMovies.pages,\r\n  status: state.upcomingMovies.status\r\n});\r\n\r\nexport default upcomingMoviesSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { addToLocalStorage, removeFromLocalStorage } from './watchlistSlice';\r\nimport {\r\n  setLoading,\r\n  setFailure,\r\n  handleToggle,\r\n  requestSuccess\r\n} from './ReducerLogic';\r\nimport axios from 'axios';\r\n\r\nexport const popularMoviesSlice = createSlice({\r\n  name: 'POPULAR_MOVIES',\r\n  initialState: {\r\n    movies: [],\r\n    pages: null,\r\n    status: 'idle',\r\n    error: null\r\n  },\r\n  reducers: {\r\n    toggle: handleToggle,\r\n    startFetching: setLoading,\r\n    fetchingFailed: setFailure,\r\n    fetchingSuccess: requestSuccess\r\n  }\r\n});\r\n\r\nexport const {\r\n  toggle,\r\n  startFetching,\r\n  fetchingFailed,\r\n  fetchingSuccess\r\n} = popularMoviesSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\n\r\n/***  THUNKS  ***/\r\n// Fetch Movies\r\nexport const fetchPopularMovies = page => async dispatch => {\r\n  dispatch(startFetching());\r\n  try {\r\n    const response = await axios.get(`/movies/popular/${page}`);\r\n    dispatch(fetchingSuccess(response.data));\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch(fetchingFailed(err.message));\r\n  }\r\n};\r\n\r\n// Toggle watchlisted property | Add/remove watchlist\r\nexport const toggleWatchlistPopular = selectedMovie => async dispatch => {\r\n  dispatch(toggle(selectedMovie));\r\n\r\n  // Add/remove logic inversed because of toggle\r\n  if (selectedMovie.watchlisted) {\r\n    dispatch(removeFromLocalStorage(selectedMovie));\r\n  } else {\r\n    dispatch(addToLocalStorage(selectedMovie));\r\n  }\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\n\r\nexport const popularMoviesState = state => ({\r\n  movies: state.popularMovies.movies,\r\n  pages: state.popularMovies.pages,\r\n  status: state.popularMovies.status\r\n});\r\n\r\nexport default popularMoviesSlice.reducer;\r\n","import React from 'react';\r\nimport {\r\n  PaginationContainer,\r\n  PreviousPagination,\r\n  NextPagination,\r\n  PaginationButton\r\n} from '../styles/styled-components';\r\n\r\nconst Pagination = ({\r\n  firstMovieVisible,\r\n  lastMovieVisible,\r\n  showNextMovies,\r\n  showPreviousMovies\r\n}) => {\r\n  return (\r\n    <PaginationContainer>\r\n      <PreviousPagination>\r\n        {firstMovieVisible !== 0 && (\r\n          <PaginationButton onClick={() => showPreviousMovies()}>\r\n            Previous\r\n          </PaginationButton>\r\n        )}\r\n      </PreviousPagination>\r\n      <NextPagination>\r\n        <PaginationButton onClick={() => showNextMovies()}>\r\n          Next\r\n        </PaginationButton>\r\n      </NextPagination>\r\n    </PaginationContainer>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\nimport { MovieThumbnail } from '../styles/styled-components';\r\n\r\nconst SimilarMovie = ({ id, posterPath, change }) => {\r\n  return (\r\n    <MovieThumbnail\r\n      background_img={posterPath}\r\n      onClick={() => change(id)}\r\n    ></MovieThumbnail>\r\n  );\r\n};\r\n\r\nexport default SimilarMovie;\r\n","import React from 'react';\r\nimport {\r\n  SimilarMoviesContainer,\r\n  SimilarMoviesGrid,\r\n  SimilarMoviesHeading\r\n} from '../styles/styled-components';\r\nimport SimilarMovie from './SimilarMovie';\r\n\r\nconst SimilarMoviesSection = ({ similarMovies, gridItems, change }) => {\r\n  return (\r\n    <SimilarMoviesContainer>\r\n      <SimilarMoviesHeading>Similar Movies</SimilarMoviesHeading>\r\n      {similarMovies && similarMovies.length ? (\r\n        <SimilarMoviesGrid>\r\n          {similarMovies.slice(0, gridItems).map(movie => (\r\n            <SimilarMovie\r\n              key={movie.id}\r\n              id={movie.id}\r\n              change={change}\r\n              posterPath={`url(https://image.tmdb.org/t/p/w500${movie.poster_path})`}\r\n            />\r\n          ))}\r\n        </SimilarMoviesGrid>\r\n      ) : (\r\n        <p>None found.</p>\r\n      )}\r\n    </SimilarMoviesContainer>\r\n  );\r\n};\r\n\r\nexport default SimilarMoviesSection;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  watchlistState,\r\n  remove\r\n} from '../features/movies/slices/watchlistSlice';\r\nimport axios from 'axios';\r\nimport {\r\n  Movie,\r\n  CustomModal,\r\n  CustomModalBody,\r\n  MainDiv,\r\n  CloseButton,\r\n  ImageContainer,\r\n  MovieHeader,\r\n  MovieImage,\r\n  DetailsContainer,\r\n  Details,\r\n  Description,\r\n  IconContainer,\r\n  HeartIcon\r\n} from '../styles/styled-components';\r\nimport SimilarMoviesSection from './SimilarMoviesSection';\r\nimport PosterUnavailable from '../images/poster_unavailable.png';\r\n\r\nconst MovieCard = ({ movie, toggleWatchlist, gridItems }) => {\r\n  const dispatch = useDispatch();\r\n  const { watchlist } = useSelector(watchlistState);\r\n\r\n  const [movieDetails, setMovieDetails] = useState(movie);\r\n  const [similarMovies, setSimilarMovies] = useState([]);\r\n  const [similarMovieDetails, setSimilarMovieDetails] = useState(null);\r\n  const [isMovieModalWatchlisted, setIsMovieModalWatchlisted] = useState(\r\n    movie.watchlisted\r\n  );\r\n\r\n  const {\r\n    watchlisted,\r\n    id,\r\n    poster_path,\r\n    title,\r\n    tagline,\r\n    genres,\r\n    runtime,\r\n    overview,\r\n    release_date,\r\n    original_language,\r\n    budget,\r\n    revenue,\r\n    vote_average,\r\n    homepage\r\n  } = similarMovieDetails ? similarMovieDetails : movieDetails;\r\n\r\n  // For Watchlist Component\r\n  if (!toggleWatchlist) {\r\n    toggleWatchlist = remove;\r\n  }\r\n\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n    if (!modal) {\r\n      fetchSimilarMovies();\r\n    }\r\n    // When modal closes, reset similarmovieDetails to reset modal with\r\n    // original data if users clicks again\r\n    else {\r\n      setSimilarMovieDetails(null);\r\n    }\r\n  };\r\n\r\n  let width = 'w500';\r\n  if (gridItems <= 4) {\r\n    width = 'w342';\r\n  } else {\r\n    width = 'w500';\r\n  }\r\n\r\n  // Always stays the same\r\n  let IMG_MOVIE_CARD = `https://image.tmdb.org/t/p/${width}${movie.poster_path}`;\r\n  if (!movie.poster_path || !IMG_MOVIE_CARD) {\r\n    IMG_MOVIE_CARD = PosterUnavailable;\r\n  }\r\n\r\n  // Changes when similar movie is selected\r\n  let IMG_THUMBNAIL_URL = `https://image.tmdb.org/t/p/w342${poster_path}`;\r\n  if (!poster_path || !IMG_THUMBNAIL_URL) {\r\n    IMG_THUMBNAIL_URL = PosterUnavailable;\r\n  }\r\n\r\n  const fetchMovieDetails = async (movieId = id) => {\r\n    const details = await axios.get(`/movies/${movieId}`);\r\n    setMovieDetails({ ...details.data, watchlisted: movie.watchlisted });\r\n  };\r\n\r\n  const fetchSimilarMovieDetails = async id => {\r\n    const details = await axios.get(`/movies/${id}`);\r\n\r\n    const movieWatchlisted = watchlist.find(\r\n      movie => movie.id === details.data.id\r\n    );\r\n    if (movieWatchlisted) {\r\n      setSimilarMovieDetails({ ...details.data, watchlisted: true });\r\n    } else {\r\n      setSimilarMovieDetails({ ...details.data, watchlisted: false });\r\n    }\r\n\r\n    // setSimilarMovieDetails(details.data);\r\n  };\r\n\r\n  const fetchSimilarMovies = async (movieId = id) => {\r\n    const similarMovies = await axios.get(`/movies/${movieId}/similar/1`);\r\n    if (similarMovies.data.results) {\r\n      setSimilarMovies(similarMovies.data.results);\r\n    }\r\n  };\r\n\r\n  const changeToSimilarMovie = async id => {\r\n    fetchSimilarMovieDetails(id);\r\n    fetchSimilarMovies(id);\r\n  };\r\n\r\n  const formatMoney = num => {\r\n    const money = num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\r\n    return '$' + money;\r\n  };\r\n\r\n  const getYear = date => {\r\n    const dateObj = new Date(date);\r\n    return dateObj.getFullYear();\r\n  };\r\n\r\n  const handleWatchlist = e => {\r\n    e.stopPropagation();\r\n    let movieToAdd = null;\r\n\r\n    // Checks if movie in modal has changed\r\n    if (similarMovieDetails) {\r\n      movieToAdd = {\r\n        watchlisted: !similarMovieDetails.watchlisted,\r\n        ...similarMovieDetails\r\n      };\r\n      setSimilarMovieDetails({\r\n        ...similarMovieDetails,\r\n        watchlisted: !similarMovieDetails.watchlisted\r\n      });\r\n    } else {\r\n      movieToAdd = movieDetails;\r\n    }\r\n\r\n    dispatch(toggleWatchlist(movieToAdd));\r\n  };\r\n\r\n  const checkIfMovieCardWatchlisted = () => {\r\n    const movieToCheck = movieDetails;\r\n\r\n    const found = watchlist.find(movie => movie.id === movieToCheck.id);\r\n\r\n    // Using 1s and 0s because of Styled Components limitation with boolean props\r\n    if (found) {\r\n      return 1;\r\n    } else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  // Checks if movie in modal is watchlisted\r\n  const checkIfMovieModalWatchlisted = () => {\r\n    const movieToCheck = similarMovieDetails\r\n      ? similarMovieDetails\r\n      : movieDetails;\r\n\r\n    const found = watchlist.find(movie => movie.id === movieToCheck.id);\r\n\r\n    if (found) {\r\n      setIsMovieModalWatchlisted(true);\r\n    } else {\r\n      setIsMovieModalWatchlisted(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchAsync = async () => {\r\n      fetchMovieDetails();\r\n    };\r\n    fetchAsync();\r\n  }, []);\r\n\r\n  // Makes sure \"watchlisted\" stays in sync with client state\r\n  // (b/c when movieDetails is fetched the server passes \"watchlisted\": false)\r\n  useEffect(() => {\r\n    setMovieDetails({ ...movieDetails, watchlisted: movie.watchlisted });\r\n  }, [movie.watchlisted]);\r\n\r\n  // When similar movie selected, check if watchlisted\r\n  useEffect(() => {\r\n    checkIfMovieModalWatchlisted();\r\n  }, [similarMovieDetails, watchlist]);\r\n\r\n  return (\r\n    <Movie background_img={`url(${IMG_MOVIE_CARD})`} onClick={toggle}>\r\n      <h1>{title}</h1>\r\n      <IconContainer onClick={handleWatchlist}>\r\n        <HeartIcon watchlisted={checkIfMovieCardWatchlisted()} />\r\n      </IconContainer>\r\n      <CustomModal isOpen={modal} toggle={toggle}>\r\n        <CustomModalBody>\r\n          <IconContainer onClick={handleWatchlist}>\r\n            <HeartIcon watchlisted={isMovieModalWatchlisted ? 1 : 0} />\r\n          </IconContainer>\r\n          <CloseButton onClick={toggle} />\r\n          <MainDiv>\r\n            <ImageContainer>\r\n              <MovieImage src={`${IMG_THUMBNAIL_URL}`}></MovieImage>\r\n            </ImageContainer>\r\n            <MovieHeader>\r\n              <h1>{title}</h1>\r\n              <h2>{tagline}</h2>\r\n              <DetailsContainer>\r\n                {genres && (\r\n                  <Details>\r\n                    <h3>Genres</h3>\r\n                    {genres.slice(0, 3).map(genre => (\r\n                      <p key={genre.id}>{genre.name}</p>\r\n                    ))}\r\n                  </Details>\r\n                )}\r\n                {runtime ? (\r\n                  <Details>\r\n                    <h3>Runtime</h3>\r\n                    <p>{runtime} minutes</p>\r\n                  </Details>\r\n                ) : null}\r\n                {release_date ? (\r\n                  <Details hidden={window.innerWidth < 375 ? true : false}>\r\n                    <h3>Released</h3>\r\n                    <p>{getYear(release_date)}</p>\r\n                  </Details>\r\n                ) : null}\r\n                {vote_average ? (\r\n                  <Details hidden={window.innerWidth < 375 ? true : false}>\r\n                    <h3>Rating</h3>\r\n                    <p>{vote_average}</p>\r\n                  </Details>\r\n                ) : null}\r\n                {original_language ? (\r\n                  <Details hidden={window.innerWidth < 450 ? true : false}>\r\n                    <h3>Language</h3>\r\n                    <p>{original_language.toUpperCase()}</p>\r\n                  </Details>\r\n                ) : null}\r\n                {homepage ? (\r\n                  <Details hidden={window.innerWidth < 450 ? true : false}>\r\n                    <h3>Website</h3>\r\n                    <p>\r\n                      <a href={homepage}>Link</a>\r\n                    </p>\r\n                  </Details>\r\n                ) : null}\r\n                {budget ? (\r\n                  <Details hidden={window.innerWidth < 450 ? true : false}>\r\n                    <h3>Budget</h3>\r\n                    <p>{formatMoney(budget)}</p>\r\n                  </Details>\r\n                ) : null}\r\n                {revenue ? (\r\n                  <Details hidden={window.innerWidth < 450 ? true : false}>\r\n                    <h3>Revenue</h3>\r\n                    <p>{formatMoney(revenue)}</p>\r\n                  </Details>\r\n                ) : null}\r\n              </DetailsContainer>\r\n            </MovieHeader>\r\n          </MainDiv>\r\n          {overview && <Description>{overview}</Description>}\r\n          <SimilarMoviesSection\r\n            similarMovies={similarMovies}\r\n            gridItems={gridItems}\r\n            change={changeToSimilarMovie}\r\n          />\r\n        </CustomModalBody>\r\n      </CustomModal>\r\n    </Movie>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst AlertContainer = styled.div`\r\n  text-align: center;\r\n\r\n  p {\r\n    font-size: 1.25rem;\r\n    margin-bottom: 2rem;\r\n    color: ${props => props.theme.grayLight};\r\n  }\r\n\r\n  a {\r\n    cursor: pointer;\r\n    font-size: 1.25rem;\r\n    font-weight: bold;\r\n    letter-spacing: 0.5px;\r\n    padding: 0.75rem 1rem;\r\n    border-radius: ${props => props.theme.borderRadius};\r\n    color: ${props => props.theme.light};\r\n    border: 1px solid ${props => props.theme.gold};\r\n    text-decoration: none !important;\r\n    transition: background 250ms ease-in;\r\n\r\n    &:hover {\r\n      color: ${props => props.theme.dark};\r\n      background: ${props => props.theme.gold};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Alert = ({ children }) => {\r\n  return <AlertContainer>{children}</AlertContainer>;\r\n};\r\n\r\nexport default Alert;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Pagination from './Pagination';\r\nimport MovieCard from './MovieCard';\r\nimport { Grid } from '../styles/styled-components';\r\nimport Alert from './Alert';\r\n\r\nconst MovieGrid = ({\r\n  movies,\r\n  status,\r\n  maxPages,\r\n  currentPage,\r\n  toggleWatchlist,\r\n  fetchNextPage,\r\n  gridItems\r\n}) => {\r\n  const [firstMovieVisible, setFirstMovieVisible] = useState(0);\r\n  const [lastMovieVisible, setLastMovieVisible] = useState(gridItems);\r\n\r\n  const showPreviousMovies = () => {\r\n    if (firstMovieVisible >= gridItems) {\r\n      setFirstMovieVisible(prevState => prevState - gridItems);\r\n      setLastMovieVisible(prevState => prevState - gridItems);\r\n    } else {\r\n      setFirstMovieVisible(0);\r\n      setLastMovieVisible(gridItems);\r\n    }\r\n  };\r\n\r\n  const showNextMovies = async () => {\r\n    if (\r\n      lastMovieVisible + gridItems > movies.length &&\r\n      currentPage < maxPages\r\n    ) {\r\n      await fetchNextPage();\r\n    }\r\n\r\n    setFirstMovieVisible(prevState => prevState + gridItems);\r\n    setLastMovieVisible(prevState => prevState + gridItems);\r\n  };\r\n  useEffect(() => {\r\n    const moviesShowing = Math.abs(lastMovieVisible - firstMovieVisible);\r\n    const moviesToFill = gridItems - moviesShowing;\r\n    if (lastMovieVisible + moviesToFill < movies.length) {\r\n      setLastMovieVisible(prevState => prevState + moviesToFill);\r\n    }\r\n  }, [gridItems]);\r\n\r\n  if (status === 'failure') {\r\n    return (\r\n      <Alert message='Oh no, something went wrong! Could not load movies.' />\r\n    );\r\n  }\r\n\r\n  if (status === 'idle' || status === 'loading') {\r\n    return (\r\n      <Alert>\r\n        <p style={{ textAlign: 'left', marginTop: '1.5rem' }}>Loading...</p>\r\n      </Alert>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Pagination\r\n        firstMovieVisible={firstMovieVisible}\r\n        lastMovieVisible={lastMovieVisible}\r\n        showPreviousMovies={showPreviousMovies}\r\n        showNextMovies={showNextMovies}\r\n      />\r\n      <Grid>\r\n        {movies.slice(firstMovieVisible, lastMovieVisible).map(movie => (\r\n          <MovieCard\r\n            key={movie.id}\r\n            status={status}\r\n            movie={movie}\r\n            toggleWatchlist={toggleWatchlist}\r\n            gridItems={gridItems}\r\n          />\r\n        ))}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieGrid;\r\n","import {\r\n  fetchNowPlayingMovies,\r\n  toggleWatchlistNowPlaying\r\n} from './nowPlayingMoviesSlice';\r\nimport {\r\n  fetchUpcomingMovies,\r\n  toggleWatchlistUpcoming\r\n} from './upcomingMoviesSlice';\r\nimport {\r\n  fetchTopRatedMovies,\r\n  toggleWatchlistTopRated\r\n} from './topRatedMoviesSlice';\r\nimport {\r\n  fetchPopularMovies,\r\n  toggleWatchlistPopular\r\n} from './popularMoviesSlice';\r\n\r\n// Returns designated fetch to component\r\nexport const determineFetch = type => {\r\n  switch (type) {\r\n    case 'NOW_PLAYING':\r\n      return fetchNowPlayingMovies;\r\n    case 'UPCOMING':\r\n      return fetchUpcomingMovies;\r\n    case 'TOP_RATED':\r\n      return fetchTopRatedMovies;\r\n    case 'POPULAR':\r\n      return fetchPopularMovies;\r\n    default:\r\n  }\r\n};\r\n\r\nexport const determineToggleWatchlist = type => {\r\n  switch (type) {\r\n    case 'NOW_PLAYING':\r\n      return toggleWatchlistNowPlaying;\r\n    case 'UPCOMING':\r\n      return toggleWatchlistUpcoming;\r\n    case 'TOP_RATED':\r\n      return toggleWatchlistTopRated;\r\n    case 'POPULAR':\r\n      return toggleWatchlistPopular;\r\n    default:\r\n  }\r\n};\r\n","import { useLayoutEffect, useState } from 'react';\r\n\r\nconst useWindowSize = () => {\r\n  const [size, setSize] = useState(0);\r\n  useLayoutEffect(() => {\r\n    function updateSize() {\r\n      setSize(window.innerWidth);\r\n    }\r\n    window.addEventListener('resize', updateSize);\r\n    updateSize();\r\n    return () => window.removeEventListener('resize', updateSize);\r\n  }, []);\r\n  return [size];\r\n};\r\n\r\nexport default useWindowSize;\r\n","import React, { useState, useEffect, useLayoutEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchLocalStorage } from '../features/movies/slices/watchlistSlice';\r\nimport {\r\n  nowPlayingState,\r\n  toggleWatchlistNowPlaying\r\n} from '../features/movies/slices/nowPlayingMoviesSlice';\r\nimport {\r\n  topRatedMoviesState,\r\n  toggleWatchlistTopRated\r\n} from '../features/movies/slices/topRatedMoviesSlice';\r\nimport {\r\n  upcomingMoviesState,\r\n  toggleWatchlistUpcoming\r\n} from '../features/movies/slices/upcomingMoviesSlice';\r\nimport {\r\n  popularMoviesState,\r\n  toggleWatchlistPopular\r\n} from '../features/movies/slices/popularMoviesSlice';\r\nimport MovieGrid from './MovieGrid';\r\nimport { determineFetch } from '../features/movies/slices/GetReducers';\r\nimport useWindowSize from '../hooks/useWindowSize';\r\n\r\nconst getInitialGridItems = () => {\r\n  if (window.innerWidth >= 1200) {\r\n    return 6;\r\n  } else if (window.innerWidth >= 900) {\r\n    return 5;\r\n  } else if (window.innerWidth >= 700) {\r\n    return 4;\r\n  } else if (window.innerWidth >= 375) {\r\n    return 3;\r\n  } else {\r\n    return 2;\r\n  }\r\n};\r\n\r\nconst GridWithPagination = ({ type }) => {\r\n  const dispatch = useDispatch();\r\n  const [width] = useWindowSize();\r\n  const [gridItems, setGridItems] = useState(getInitialGridItems());\r\n  const [nowPlayingCurrentPage, setNowPlayingCurrentPage] = useState(1);\r\n  const [upcomingCurrentPage, setUpcomingCurrentPage] = useState(1);\r\n  const [topRatedCurrentPage, setTopRatedCurrentPage] = useState(1);\r\n  const [popularCurrentPage, setPopularCurrentPage] = useState(1);\r\n\r\n  const {\r\n    movies: nowPlayingMovies,\r\n    pages: nowPlayingMoviesPages,\r\n    status: nowPlayingMoviesStatus\r\n  } = useSelector(nowPlayingState);\r\n\r\n  const {\r\n    movies: upcomingMovies,\r\n    pages: upcomingMoviesPages,\r\n    status: upcomingMoviesStatus\r\n  } = useSelector(upcomingMoviesState);\r\n\r\n  const {\r\n    movies: topRatedMovies,\r\n    pages: topRatedMoviesPages,\r\n    status: topRatedMoviesStatus\r\n  } = useSelector(topRatedMoviesState);\r\n\r\n  const {\r\n    movies: popularMovies,\r\n    pages: popularMoviesPages,\r\n    status: popularMoviesStatus\r\n  } = useSelector(popularMoviesState);\r\n\r\n  const fetchNextPage = () => {\r\n    let fetch = null;\r\n    switch (type) {\r\n      case 'NOW_PLAYING':\r\n        setNowPlayingCurrentPage(prevState => prevState + 1);\r\n        fetch = determineFetch(type);\r\n        dispatch(fetch(nowPlayingCurrentPage + 1));\r\n        break;\r\n      case 'UPCOMING':\r\n        setUpcomingCurrentPage(prevState => prevState + 1);\r\n        fetch = determineFetch(type);\r\n        dispatch(fetch(upcomingCurrentPage + 1));\r\n        break;\r\n      case 'TOP_RATED':\r\n        setTopRatedCurrentPage(prevState => prevState + 1);\r\n        fetch = determineFetch(type);\r\n        dispatch(fetch(topRatedCurrentPage + 1));\r\n        break;\r\n      case 'POPULAR':\r\n        setPopularCurrentPage(prevState => prevState + 1);\r\n        fetch = determineFetch(type);\r\n        dispatch(fetch(popularCurrentPage + 1));\r\n        break;\r\n      default:\r\n    }\r\n  };\r\n\r\n  // Dispatch action to fetch movies\r\n  useEffect(() => {\r\n    // Call designated fetch action and fetch Page 1\r\n    const fetch = determineFetch(type);\r\n    dispatch(fetch(1));\r\n\r\n    // Initialize LocalStorage\r\n    dispatch(fetchLocalStorage());\r\n  }, []);\r\n\r\n  useLayoutEffect(() => {\r\n    if (width >= 1200) {\r\n      setGridItems(6);\r\n    } else if (width >= 900) {\r\n      setGridItems(5);\r\n    } else if (width >= 700) {\r\n      setGridItems(4);\r\n    } else if (width >= 375) {\r\n      setGridItems(3);\r\n    } else {\r\n      setGridItems(2);\r\n    }\r\n  }, [width]);\r\n\r\n  const createGridComponent = () => {\r\n    switch (type) {\r\n      case 'NOW_PLAYING':\r\n        return (\r\n          <MovieGrid\r\n            movies={nowPlayingMovies}\r\n            status={nowPlayingMoviesStatus}\r\n            toggleWatchlist={toggleWatchlistNowPlaying}\r\n            fetchNextPage={fetchNextPage}\r\n            gridItems={gridItems}\r\n            currentPage={nowPlayingCurrentPage}\r\n            maxPages={nowPlayingMoviesPages}\r\n          />\r\n        );\r\n      case 'TOP_RATED':\r\n        return (\r\n          <MovieGrid\r\n            movies={topRatedMovies}\r\n            status={topRatedMoviesStatus}\r\n            toggleWatchlist={toggleWatchlistTopRated}\r\n            fetchNextPage={fetchNextPage}\r\n            gridItems={gridItems}\r\n            currentPage={topRatedCurrentPage}\r\n            maxPages={topRatedMoviesPages}\r\n          />\r\n        );\r\n      case 'UPCOMING':\r\n        return (\r\n          <MovieGrid\r\n            movies={upcomingMovies}\r\n            status={upcomingMoviesStatus}\r\n            toggleWatchlist={toggleWatchlistUpcoming}\r\n            fetchNextPage={fetchNextPage}\r\n            gridItems={gridItems}\r\n            currentPage={upcomingCurrentPage}\r\n            maxPages={upcomingMoviesPages}\r\n          />\r\n        );\r\n      case 'POPULAR':\r\n        return (\r\n          <MovieGrid\r\n            movies={popularMovies}\r\n            status={popularMoviesStatus}\r\n            toggleWatchlist={toggleWatchlistPopular}\r\n            fetchNextPage={fetchNextPage}\r\n            gridItems={gridItems}\r\n            currentPage={popularCurrentPage}\r\n            maxPages={popularMoviesPages}\r\n          />\r\n        );\r\n    }\r\n  };\r\n\r\n  return <>{createGridComponent()}</>;\r\n};\r\n\r\nexport default GridWithPagination;\r\n","import React from 'react';\r\nimport { Heading } from '../styles/styled-components';\r\nimport GridWithPagination from './GridWithPagination';\r\nimport { MovieSectionContainer } from '../styles/styled-components';\r\n\r\nconst GridSection = ({ type, heading }) => {\r\n  return (\r\n    <MovieSectionContainer>\r\n      <Heading>{heading}</Heading>\r\n      <GridWithPagination type={type} />\r\n    </MovieSectionContainer>\r\n  );\r\n};\r\n\r\nexport default GridSection;\r\n","import React from 'react';\r\nimport GridSection from './GridSection';\r\nimport { FullWidthContainer } from '../styles/styled-components';\r\n\r\nconst MovieSection = () => {\r\n  return (\r\n    <FullWidthContainer>\r\n      <GridSection type='NOW_PLAYING' heading='Now Playing in Theatres' />\r\n      <GridSection type='TOP_RATED' heading='Top Rated' />\r\n      <GridSection type='POPULAR' heading='Popular' />\r\n      <GridSection type='UPCOMING' heading='Upcoming' />\r\n    </FullWidthContainer>\r\n  );\r\n};\r\n\r\nexport default MovieSection;\r\n","import React from 'react';\r\nimport {\r\n  FullWidthContainer,\r\n  IconContainer,\r\n  HeartIcon\r\n} from '../styles/styled-components';\r\nimport styled from 'styled-components';\r\nimport IronManImageMedium from '../images/iron_man_md.jpg';\r\nimport IronManImageLarge from '../images/iron_man_lg.jpg';\r\n\r\nconst FullWidthBackground = styled(FullWidthContainer)`\r\n  color: #fff;\r\n\r\n  @media (min-width: 1px) {\r\n    background: linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)),\r\n      url(${IronManImageMedium});\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    background-position: top;\r\n  }\r\n\r\n  @media (min-width: 850px) {\r\n    background: linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)),\r\n      url(${IronManImageLarge});\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    background-position: unset;\r\n  }\r\n`;\r\n\r\nconst Container = styled.section`\r\n  max-width: 1200px;\r\n  min-height: 90vh;\r\n  text-align: center;\r\n  margin: 0 0.5rem 2rem;\r\n  padding: 2rem 0.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n\r\n  @media (min-width: 600px) {\r\n    padding: 2rem 2rem;\r\n  }\r\n\r\n  @media (min-width: 1200px) {\r\n    margin: 0 auto 2rem;\r\n  }\r\n`;\r\n\r\nconst MainHeading = styled.h1`\r\n  font-size: 4rem;\r\n  text-align: center;\r\n`;\r\n\r\nconst SubHeading = styled.h2`\r\n  font-size: 2rem;\r\n  font-weight: 400;\r\n  color: #c3c3c3;\r\n`;\r\n\r\nconst FlexContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  position: relative;\r\n  max-width: 500px;\r\n  margin: 4rem auto 0 auto;\r\n  padding: 1rem;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  border-radius: ${props => props.theme.borderRadius};\r\n`;\r\n\r\nconst Heart = styled(HeartIcon)`\r\n  color: ${props => props.theme.red};\r\n`;\r\n\r\nconst InnerIconContainer = styled(IconContainer)`\r\n  position: relative;\r\n  top: 10px;\r\n  left: 13px;\r\n  flex-basis: 45px;\r\n  cursor: none;\r\n`;\r\n\r\nconst Paragraph = styled.p`\r\n  flex: 100%;\r\n  font-size: 1.125rem;\r\n  padding-left: 2rem;\r\n  margin-bottom: 0;\r\n  text-align: left;\r\n`;\r\n\r\nconst HeroSection = () => {\r\n  return (\r\n    <div style={{ background: 'hsl(250, 40%, 5%)' }}>\r\n      <FullWidthBackground>\r\n        <Container>\r\n          <MainHeading>Movie Explorer</MainHeading>\r\n          <SubHeading>Discover awesome movies.</SubHeading>\r\n          <FlexContainer>\r\n            {/* <OuterContainer> */}\r\n            <InnerIconContainer>\r\n              <Heart />\r\n            </InnerIconContainer>\r\n            {/* </OuterContainer> */}\r\n            <Paragraph>click the heart icon to add to watchlist</Paragraph>\r\n          </FlexContainer>\r\n        </Container>\r\n      </FullWidthBackground>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeroSection;\r\n","import React from 'react';\r\nimport MovieSection from './MovieSection';\r\nimport HeroSection from './HeroSection';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n      <HeroSection />\r\n      <MovieSection />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchLocalStorage } from '../features/movies/slices/watchlistSlice';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  watchlistState,\r\n  toggleWatchlist\r\n} from '../features/movies/slices/watchlistSlice';\r\nimport {\r\n  Grid,\r\n  Heading,\r\n  MovieSectionContainer\r\n} from '../styles/styled-components';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport MovieCard from './MovieCard';\r\nimport Alert from './Alert';\r\n\r\nconst WatchlistHeading = styled(Heading)`\r\n  font-size: 2rem !important;\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nconst WatchlistGrid = () => {\r\n  const dispatch = useDispatch();\r\n  const { watchlist } = useSelector(watchlistState);\r\n  const [recommendedMovies, setRecommendedMovies] = useState([]);\r\n\r\n  const fetchRecommendations = async () => {\r\n    let newRecommendations = [];\r\n\r\n    for (const movie of watchlist) {\r\n      const { id } = movie;\r\n      const response = await axios.get(`/movies/${id}/recommendations/1`);\r\n\r\n      let newMovies = response.data.results || [];\r\n      if (newMovies.length) {\r\n        newMovies = newMovies.slice(0, 5);\r\n      }\r\n      const uniqueMovies = removeDuplicates(newRecommendations, newMovies);\r\n      newRecommendations = [...uniqueMovies];\r\n    }\r\n    const newMoviesRecommended = filterOutWatchlist(newRecommendations);\r\n    setRecommendedMovies(newMoviesRecommended);\r\n  };\r\n\r\n  const filterOutWatchlist = recommendations => {\r\n    const filteredRecommendations = recommendations.filter(\r\n      movie => !watchlist.some(m => m.id === movie.id)\r\n    );\r\n\r\n    return filteredRecommendations;\r\n  };\r\n\r\n  const removeDuplicates = (firstArray, secondArray) => {\r\n    const combinedArrays = [...firstArray, ...secondArray];\r\n    const uniqueMovies = combinedArrays.filter(\r\n      (movie, index, self) => index === self.findIndex(m => m.id === movie.id)\r\n    );\r\n    return uniqueMovies;\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Initialize LocalStorage\r\n    dispatch(fetchLocalStorage());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchRecommendations();\r\n  }, [watchlist]);\r\n\r\n  return (\r\n    <>\r\n      <WatchlistHeading>In Your Watchlist</WatchlistHeading>\r\n      {watchlist.length ? (\r\n        <>\r\n          <MovieSectionContainer>\r\n            <Grid>\r\n              {watchlist.map(movie => (\r\n                <MovieCard\r\n                  key={movie.id}\r\n                  movie={movie}\r\n                  toggleWatchlist={toggleWatchlist}\r\n                />\r\n              ))}\r\n            </Grid>\r\n          </MovieSectionContainer>\r\n          <Heading style={{ marginBottom: '3rem' }}>\r\n            Based on your watchlist, you <em>may</em> enjoy...\r\n          </Heading>\r\n          <Grid>\r\n            {recommendedMovies.map(movie => (\r\n              <MovieCard\r\n                key={movie.id}\r\n                movie={movie}\r\n                toggleWatchlist={toggleWatchlist}\r\n              />\r\n            ))}\r\n          </Grid>\r\n        </>\r\n      ) : (\r\n        <Alert>\r\n          <p>There doesn't seem to be anything in your watchlist...</p>\r\n          <Link to='/'>Let's browse some movies</Link>\r\n        </Alert>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WatchlistGrid;\r\n","import React from 'react';\r\nimport { FullWidthContainer } from '../styles/styled-components';\r\nimport styled from 'styled-components';\r\nimport WatchlistGrid from './WatchlistGrid';\r\n\r\nconst FullWidthWatchlistContainer = styled(FullWidthContainer)`\r\n  padding: 5rem 0.5rem;\r\n\r\n  @media (min-width: 600px) {\r\n    padding: 5rem 2rem;\r\n  }\r\n`;\r\n\r\nconst Home = () => {\r\n  return (\r\n    <FullWidthWatchlistContainer>\r\n      <WatchlistGrid />\r\n    </FullWidthWatchlistContainer>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport './App.css';\r\nimport AppNavbar from './common/AppNavBar';\r\nimport Home from './common/Home';\r\nimport Watchlist from './common/Watchlist';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <AppNavbar />\r\n      <Switch>\r\n        <Route path='/' exact component={Home} />\r\n        <Route path='/watchlist' component={Watchlist} />\r\n        <Route\r\n          render={() => (\r\n            <h2 style={{ textAlign: 'center', marginTop: '3rem' }}>\r\n              404 Page Not Found\r\n            </h2>\r\n          )}\r\n        />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport watchlistReducer from '../features/movies/slices/watchlistSlice';\r\nimport nowPlayingMoviesReducer from '../features/movies/slices/nowPlayingMoviesSlice';\r\nimport popularMoviesReducer from '../features/movies/slices/popularMoviesSlice';\r\nimport upcomingMoviesReducer from '../features/movies/slices/upcomingMoviesSlice';\r\nimport topRatedMoviesReducer from '../features/movies/slices/topRatedMoviesSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    watchlist: watchlistReducer,\r\n    nowPlayingMovies: nowPlayingMoviesReducer,\r\n    topRatedMovies: topRatedMoviesReducer,\r\n    popularMovies: popularMoviesReducer,\r\n    upcomingMovies: upcomingMoviesReducer\r\n  }\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nconst theme = {\r\n  red: 'hsl(0, 50%, 50%)',\r\n  light: '#fff',\r\n  gray: 'hsl(250,5%,15%)',\r\n  dark: 'hsl(250, 40%, 5%)',\r\n  gold: 'hsl(46, 50%, 50%)',\r\n  grayLight: 'hsl(46,0%,60%)',\r\n  borderRadius: '0.3rem'\r\n};\r\n\r\nReactDOM.render(\r\n  <ThemeProvider theme={theme}>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </ThemeProvider>,\r\n  document.getElementById('root')\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/poster_unavailable.d579328a.png\";","module.exports = __webpack_public_path__ + \"static/media/iron_man_md.11329b7e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/iron_man_lg.55f01322.jpg\";"],"sourceRoot":""}